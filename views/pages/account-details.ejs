<%
// allContacts and accountData are now passed from the server

// Use the accountData passed from server instead of hardcoded mapping
const accountMap = accountData;

// Old hardcoded mapping (commented out)
/*
const accountMap = {
    'flowla': {
        name: "Flowla",
        logo: "F",
        industry: "Technology",
        website: "flowla.com",
        employees: "10-50",
        plan: "Starter",
        billing: "Monthly",
        revenue: "$26",
        renewalDate: "2024-07-05",
        location: "San Francisco, CA",
        productSubscriptions: [
            { name: "Starter Package", id: "starter-pkg" }
        ],
        description: "Flowla is an innovative B2B SaaS company that specializes in sales enablement and buyer experience platforms. Founded in 2021, the company is headquartered in San Francisco and serves growing businesses looking to modernize their sales processes. Flowla's platform helps sales teams create personalized, interactive buyer journeys that engage prospects and accelerate deal closure. With a team of 25 employees, the company has quickly gained traction in the competitive sales tech market, serving over 150 customers globally.",
        objectives: [
            "Scale customer onboarding process to support rapid growth and reduce time-to-value",
            "Improve sales team efficiency through advanced automation and workflow optimization",
            "Enhance buyer engagement metrics with personalized content and interactive experiences",
            "Expand integrations with popular CRM and marketing automation platforms",
            "Develop advanced analytics capabilities for better sales forecasting and performance tracking",
            "Build out enterprise features to target larger customers and increase average deal size"
        ],
        summary: "B2B SaaS company focused on sales enablement and buyer experience platforms. They help sales teams create personalized buyer journeys. Recent conversations have centered around API integration capabilities, custom branding options, and analytics dashboard improvements. Their primary goals are to scale their customer onboarding process, improve sales team efficiency, and enhance buyer engagement metrics.",
        highlights: [
            {
                type: "feature-request",
                title: "Feature Request",
                content: "Requesting Salesforce CRM integration for automatic deal updates",
                date: "2024-01-14",
                source: "Email"
            },
            {
                type: "pain-point",
                title: "Pain Point",
                content: "Limited customization options for buyer portal templates",
                date: "2024-01-11",
                source: "Support Ticket"
            }
        ],
        timeline: [
            {
                type: "email",
                title: "Feature request follow-up",
                date: "2024-01-14",
                time: "11:30",
                description: "Discussed Salesforce integration requirements and timeline",
                participants: {
                    from: {name: "Alex Thompson", title: "CEO", type: "contact", email: "alex@flowla.com"},
                    to: [
                        {name: "Sarah Johnson", title: "Account Manager", type: "user", email: "sarah.johnson@company.com"},
                        {name: "Mike Chen", title: "Solutions Engineer", type: "user", email: "mike.chen@company.com"}
                    ],
                    cc: [{name: "Emma Davis", title: "Head of Sales", type: "contact", email: "emma@flowla.com"}]
                }
            },
            {
                type: "meeting",
                title: "Product Demo",
                date: "2024-01-10",
                time: "14:00",
                description: "Demonstrated new features and discussed customization needs",
                participants: {
                    organizer: {name: "Sarah Johnson", title: "Account Manager", type: "user", email: "sarah.johnson@company.com"},
                    attendees: [
                        {name: "Alex Thompson", title: "CEO", type: "contact", email: "alex@flowla.com"},
                        {name: "Emma Davis", title: "Head of Sales", type: "contact", email: "emma@flowla.com"},
                        {name: "Ryan Park", title: "CTO", type: "contact", email: "ryan@flowla.com"},
                        {name: "Sarah Johnson", title: "Account Manager", type: "user", email: "sarah.johnson@company.com"},
                        {name: "Mike Chen", title: "Solutions Engineer", type: "user", email: "mike.chen@company.com"}
                    ]
                }
            },
            {
                type: "call",
                title: "Initial Discovery Call",
                date: "2024-01-03",
                time: "10:00",
                description: "Understanding their sales process and buyer journey challenges",
                participants: {
                    attendees: [
                        {name: "Alex Thompson", title: "CEO", type: "contact", email: "alex@flowla.com"},
                        {name: "Emma Davis", title: "Head of Sales", type: "contact", email: "emma@flowla.com"},
                        {name: "Sarah Johnson", title: "Account Manager", type: "user", email: "sarah.johnson@company.com"}
                    ]
                }
            }
        ],
        journey: {
            startDate: "2024-01-03",
            healthScore: 72,
            currentStage: "adoption",
            stages: {
                onboarding: { completed: 2, total: 2 },
                adoption: { completed: 1, total: 2 },
                growth: { completed: 0, total: 2 },
                expansion: { completed: 0, total: 1 }
            },
            milestones: [
                {
                    id: 1,
                    title: "Account Setup Complete",
                    description: "Initial configuration and user onboarding",
                    stage: "onboarding",
                    status: "completed",
                    completedDate: "2024-01-05",
                    completedBy: "auto",
                    isAutomatic: true
                },
                {
                    id: 2,
                    title: "First Value Realization",
                    description: "Customer created their first buyer journey",
                    stage: "onboarding",
                    status: "completed",
                    completedDate: "2024-01-12",
                    completedBy: "Sarah Johnson (CSM)",
                    isAutomatic: false
                },
                {
                    id: 3,
                    title: "Team Expansion",
                    description: "Added 5+ users to the platform",
                    stage: "adoption",
                    status: "completed",
                    completedDate: "2024-01-20",
                    completedBy: "auto",
                    isAutomatic: true
                },
                {
                    id: 4,
                    title: "Integration Setup",
                    description: "Connect with Salesforce CRM",
                    stage: "adoption",
                    status: "in_progress",
                    targetDate: "2024-02-15",
                    isAutomatic: false
                },
                {
                    id: 5,
                    title: "Advanced Features Adoption",
                    description: "Using 3+ advanced platform features",
                    stage: "growth",
                    status: "pending",
                    targetDate: "2024-03-01",
                    isAutomatic: true
                },
                {
                    id: 6,
                    title: "Executive Sponsor Identified",
                    description: "C-level champion engaged and active",
                    stage: "expansion",
                    status: "pending",
                    targetDate: "2024-04-01",
                    isAutomatic: false
                }
            ],
            businessGoals: [
                {
                    id: 1,
                    title: "Reduce Sales Cycle by 20%",
                    currentValue: 15,
                    targetValue: 20,
                    unit: "%",
                    status: "in_progress",
                    targetDate: "2024-03-31"
                },
                {
                    id: 2,
                    title: "Increase Deal Velocity",
                    currentValue: 12,
                    targetValue: 25,
                    unit: "%",
                    status: "at_risk",
                    targetDate: "2024-02-28"
                },
                {
                    id: 3,
                    title: "Onboard 50 Sales Reps",
                    currentValue: 18,
                    targetValue: 50,
                    unit: "users",
                    status: "in_progress",
                    targetDate: "2024-05-01"
                }
            ]
        }
    },
    'yahoo': {
        name: "Yahoo",
        logo: "Y",
        industry: "Internet & Media",
        website: "yahoo.com",
        employees: "5000+",
        plan: "Enterprise",
        billing: "Annual",
        revenue: "$1,424,939",
        renewalDate: "2025-09-30",
        location: "Sunnyvale, CA",
        description: "Yahoo is a global media and technology company that has been a pioneer in the internet industry since 1994. Headquartered in Sunnyvale, California, Yahoo operates one of the largest digital media networks worldwide, reaching over 900 million users monthly. The company provides a comprehensive suite of web services including search, email, news, sports, finance, and entertainment content. With a focus on mobile-first experiences and personalized content delivery, Yahoo continues to innovate in digital advertising, data analytics, and enterprise solutions while maintaining its position as a trusted source of information and services for millions of users globally.",
        objectives: [
            "Improve ad targeting capabilities through advanced machine learning and data analytics",
            "Enhance user engagement metrics across all digital properties and mobile applications",
            "Expand enterprise solutions and B2B service offerings",
            "Modernize infrastructure to support real-time data processing and analytics",
            "Strengthen mobile-first user experience and cross-platform integration",
            "Develop next-generation advertising technologies and programmatic solutions"
        ],
        summary: "Global media and technology company providing web services including search, email, news, and entertainment content.",
        recentTopics: [
            "Enterprise email solutions",
            "API rate limits",
            "Data analytics requirements"
        ],
        highlights: [
            {
                type: "feature-request",
                title: "Feature Request",
                content: "Need advanced analytics API for real-time user behavior tracking",
                date: "2024-01-16",
                source: "Email"
            },
            {
                type: "competitor",
                title: "Competitor Mention",
                content: "Comparing our solution with Google Workspace features",
                date: "2024-01-09",
                source: "Call Notes"
            }
        ],
        timeline: [
            {
                type: "email",
                title: "Enterprise plan discussion",
                date: "2024-01-16",
                time: "09:00",
                description: "Explored enterprise features and pricing options"
            },
            {
                type: "call",
                title: "Technical Architecture Review",
                date: "2024-01-09",
                time: "13:00",
                description: "Deep dive into API capabilities and integration options"
            }
        ],
        journey: {
            startDate: "2023-09-15",
            healthScore: 85,
            currentStage: "growth",
            stages: {
                onboarding: { completed: 2, total: 2 },
                adoption: { completed: 2, total: 2 },
                growth: { completed: 1, total: 2 },
                expansion: { completed: 0, total: 1 }
            },
            milestones: [
                {
                    id: 1,
                    title: "Account Setup Complete",
                    description: "Initial configuration and user onboarding",
                    stage: "onboarding",
                    status: "completed",
                    completedDate: "2023-09-22",
                    completedBy: "auto",
                    isAutomatic: true
                },
                {
                    id: 2,
                    title: "First Value Realization",
                    description: "Customer achieved their first key outcome",
                    stage: "onboarding",
                    status: "completed",
                    completedDate: "2023-10-05",
                    completedBy: "John Smith (CSM)",
                    isAutomatic: false
                },
                {
                    id: 3,
                    title: "Team Expansion",
                    description: "Added 100+ users to the platform",
                    stage: "adoption",
                    status: "completed",
                    completedDate: "2023-11-12",
                    completedBy: "auto",
                    isAutomatic: true
                },
                {
                    id: 4,
                    title: "API Integration Complete",
                    description: "Integrated with enterprise systems",
                    stage: "adoption",
                    status: "completed",
                    completedDate: "2023-12-18",
                    completedBy: "auto",
                    isAutomatic: true
                },
                {
                    id: 5,
                    title: "Advanced Analytics Enabled",
                    description: "Using advanced analytics and reporting features",
                    stage: "growth",
                    status: "completed",
                    completedDate: "2024-01-15",
                    completedBy: "auto",
                    isAutomatic: true
                },
                {
                    id: 6,
                    title: "Multi-Department Rollout",
                    description: "Expand to 3+ departments",
                    stage: "growth",
                    status: "in_progress",
                    targetDate: "2024-03-01",
                    isAutomatic: false
                },
                {
                    id: 7,
                    title: "Executive Business Review",
                    description: "Quarterly business review with C-suite",
                    stage: "expansion",
                    status: "pending",
                    targetDate: "2024-04-15",
                    isAutomatic: false
                }
            ],
            businessGoals: [
                {
                    id: 1,
                    title: "Reduce Data Processing Time by 40%",
                    currentValue: 35,
                    targetValue: 40,
                    unit: "%",
                    status: "achieved",
                    achievedDate: "2024-01-10",
                    achievedBy: "auto"
                },
                {
                    id: 2,
                    title: "Increase User Adoption to 95%",
                    currentValue: 88,
                    targetValue: 95,
                    unit: "%",
                    status: "in_progress",
                    targetDate: "2024-03-31"
                },
                {
                    id: 3,
                    title: "Deploy to 500K Users",
                    currentValue: 425000,
                    targetValue: 500000,
                    unit: "users",
                    status: "in_progress",
                    targetDate: "2024-06-01"
                },
                {
                    id: 4,
                    title: "Achieve 99.9% Uptime SLA",
                    currentValue: 99.2,
                    targetValue: 99.9,
                    unit: "%",
                    status: "at_risk",
                    targetDate: "2024-02-28"
                }
            ]
        }
    },
    'microsoft': {
        name: "Microsoft",
        logo: "M",
        industry: "Technology",
        website: "microsoft.com",
        employees: "100,000+",
        revenue: "$12,814,907",
        renewalDate: "2025-11-15",
        location: "Redmond, WA",
        description: "Microsoft Corporation is one of the world's largest and most influential technology companies, founded in 1975 by Bill Gates and Paul Allen. Headquartered in Redmond, Washington, Microsoft employs over 200,000 people globally and serves billions of customers and businesses worldwide. The company is a leader in personal computing software, cloud computing, enterprise solutions, gaming, and productivity applications. With products and services spanning Windows operating systems, Microsoft 365, Azure cloud platform, Teams collaboration tools, and Xbox gaming, Microsoft continues to drive digital transformation across industries while maintaining its commitment to empowering every person and organization on the planet to achieve more.",
        objectives: [
            "Streamline enterprise deployment processes to reduce implementation complexity and time-to-value",
            "Enhance security compliance features to meet evolving regulatory requirements and enterprise standards",
            "Improve integration with Azure services for seamless cloud-first enterprise solutions",
            "Expand AI and machine learning capabilities across all product lines and services",
            "Strengthen hybrid work solutions and collaboration tools for distributed teams",
            "Accelerate sustainability initiatives and carbon-neutral cloud infrastructure"
        ],
        summary: "Global technology leader providing software, cloud services, devices, and solutions for businesses and consumers worldwide.",
        recentTopics: [
            "Azure AD integration",
            "Compliance certifications",
            "Enterprise licensing models"
        ],
        highlights: [
            {
                type: "feature-request",
                title: "Feature Request",
                content: "Requesting native Azure Active Directory SSO integration",
                date: "2024-01-17",
                source: "Meeting Notes"
            },
            {
                type: "pain-point",
                title: "Pain Point",
                content: "Current deployment process requires too many manual steps for enterprise scale",
                date: "2024-01-15",
                source: "Email"
            }
        ],
        timeline: [
            {
                type: "meeting",
                title: "Enterprise Architecture Discussion",
                date: "2024-01-17",
                time: "10:00",
                description: "Reviewed integration requirements with Microsoft's enterprise team"
            },
            {
                type: "email",
                title: "Security compliance checklist",
                date: "2024-01-15",
                time: "14:30",
                description: "Received detailed security requirements for vendor approval"
            }
        ],
        journey: {
            startDate: "2023-03-01",
            healthScore: 95,
            currentStage: "expansion",
            stages: {
                onboarding: { completed: 2, total: 2 },
                adoption: { completed: 3, total: 3 },
                growth: { completed: 2, total: 2 },
                expansion: { completed: 1, total: 2 }
            },
            milestones: [
                {
                    id: 1,
                    title: "Enterprise Account Setup",
                    description: "Complete enterprise-grade security configuration",
                    stage: "onboarding",
                    status: "completed",
                    completedDate: "2023-03-15",
                    completedBy: "auto",
                    isAutomatic: true
                },
                {
                    id: 2,
                    title: "Azure AD Integration",
                    description: "Successfully integrated with Azure Active Directory",
                    stage: "onboarding",
                    status: "completed",
                    completedDate: "2023-04-01",
                    completedBy: "Technical Team",
                    isAutomatic: false
                },
                {
                    id: 3,
                    title: "Department Rollout Phase 1",
                    description: "Deployed to IT and Security departments",
                    stage: "adoption",
                    status: "completed",
                    completedDate: "2023-05-15",
                    completedBy: "auto",
                    isAutomatic: true
                },
                {
                    id: 4,
                    title: "User Training Completed",
                    description: "Comprehensive training for 500+ enterprise users",
                    stage: "adoption",
                    status: "completed",
                    completedDate: "2023-06-30",
                    completedBy: "Training Team",
                    isAutomatic: false
                },
                {
                    id: 5,
                    title: "Custom Workflow Implementation",
                    description: "Deployed enterprise-specific automation workflows",
                    stage: "adoption",
                    status: "completed",
                    completedDate: "2023-08-15",
                    completedBy: "auto",
                    isAutomatic: true
                },
                {
                    id: 6,
                    title: "Global Rollout",
                    description: "Deployed across all global Microsoft offices",
                    stage: "growth",
                    status: "completed",
                    completedDate: "2023-11-20",
                    completedBy: "auto",
                    isAutomatic: true
                },
                {
                    id: 7,
                    title: "Advanced Analytics Enabled",
                    description: "Implemented enterprise reporting and analytics",
                    stage: "growth",
                    status: "completed",
                    completedDate: "2024-01-10",
                    completedBy: "auto",
                    isAutomatic: true
                },
                {
                    id: 8,
                    title: "Executive Sponsor Program",
                    description: "C-suite sponsor actively engaged in success program",
                    stage: "expansion",
                    status: "completed",
                    completedDate: "2024-01-25",
                    completedBy: "Account Manager",
                    isAutomatic: false
                },
                {
                    id: 9,
                    title: "Additional Product Integration",
                    description: "Integrate additional enterprise products",
                    stage: "expansion",
                    status: "in_progress",
                    targetDate: "2024-03-15",
                    isAutomatic: false
                }
            ],
            businessGoals: [
                {
                    id: 1,
                    title: "Reduce Infrastructure Costs by 30%",
                    currentValue: 32,
                    targetValue: 30,
                    unit: "%",
                    status: "achieved",
                    achievedDate: "2023-12-01",
                    achievedBy: "auto"
                },
                {
                    id: 2,
                    title: "Achieve 99.99% Uptime SLA",
                    currentValue: 99.98,
                    targetValue: 99.99,
                    unit: "%",
                    status: "in_progress",
                    targetDate: "2024-06-30"
                },
                {
                    id: 3,
                    title: "Deploy to 50,000 Users",
                    currentValue: 48500,
                    targetValue: 50000,
                    unit: "users",
                    status: "in_progress",
                    targetDate: "2024-04-01"
                },
                {
                    id: 4,
                    title: "Implement Zero Trust Architecture",
                    currentValue: 85,
                    targetValue: 100,
                    unit: "%",
                    status: "in_progress",
                    targetDate: "2024-07-01"
                }
            ]
        }
    },
    'bilkent': {
        name: "Bilkent Universitesi",
        logo: "B",
        industry: "Education",
        website: "bilkent.edu.tr",
        employees: "1000-5000",
        plan: "Enterprise",
        billing: "Annual",
        revenue: "$82,969",
        renewalDate: "2025-07-15",
        location: "Ankara, Turkey",
        productSubscriptions: [
            { name: "Education Package", id: "edu-pkg" },
            { name: "Research Tools", id: "research-tools" }
        ],
        description: "Bilkent University is a prestigious private university in Ankara, Turkey, established in 1984. Known for its excellence in engineering, business, and liberal arts programs, the university serves over 13,000 students and employs more than 1,000 faculty members. The university is committed to providing world-class education and conducting cutting-edge research.",
        objectives: [
            "Enhance digital learning platforms for remote education",
            "Improve student information systems and administrative efficiency",
            "Develop research collaboration tools for faculty and students"
        ],
        summary: "Leading Turkish university focused on academic excellence and research innovation. Recent discussions have covered digital transformation initiatives, online learning platforms, and research collaboration tools.",
        highlights: [
            {
                type: "feature-request",
                title: "LMS Integration",
                content: "Requesting better integration with existing learning management systems",
                date: "2024-01-10",
                source: "Support Call"
            }
        ],
        timeline: [
            {
                type: "email",
                title: "Digital transformation discussion",
                date: "2024-01-10",
                time: "14:30",
                description: "Discussed plans for digital learning platform upgrades and student system improvements",
                participants: {
                    from: { name: "Dr. Sarah Chen", email: "schen@bilkent.edu.tr", type: "contact" },
                    to: [{ name: "Support Team", email: "support@company.com", type: "team" }]
                }
            },
            {
                type: "meeting",
                title: "Quarterly review meeting",
                date: "2024-01-05",
                time: "10:00",
                description: "Reviewed usage metrics and discussed upcoming feature requests for the education platform",
                participants: {
                    organizer: { name: "Account Manager", email: "am@company.com", type: "team" },
                    attendees: [
                        { name: "Dr. Sarah Chen", email: "schen@bilkent.edu.tr", type: "contact" },
                        { name: "IT Director", email: "it@bilkent.edu.tr", type: "contact" }
                    ]
                }
            },
            {
                type: "ticket",
                title: "Support ticket: LMS integration issues",
                date: "2023-12-28",
                time: "16:45",
                description: "Student login issues with the new learning management system integration",
                participants: {
                    reporter: { name: "IT Support", email: "itsupport@bilkent.edu.tr", type: "contact" },
                    assignee: { name: "Technical Support", email: "tech@company.com", type: "team" },
                    watchers: [
                        { name: "Dr. Sarah Chen", email: "schen@bilkent.edu.tr", type: "contact" }
                    ]
                }
            },
            {
                type: "call",
                title: "Technical consultation call",
                date: "2023-12-20",
                time: "09:00",
                description: "Discussed implementation timeline and technical requirements for the platform upgrade",
                participants: {
                    organizer: { name: "Solutions Engineer", email: "se@company.com", type: "team" },
                    attendees: [
                        { name: "Dr. Sarah Chen", email: "schen@bilkent.edu.tr", type: "contact" },
                        { name: "System Administrator", email: "admin@bilkent.edu.tr", type: "contact" }
                    ]
                }
            },
            {
                type: "email",
                title: "Contract renewal discussion",
                date: "2023-12-15",
                time: "11:20",
                description: "Initial discussion about contract terms and renewal options for the upcoming year",
                participants: {
                    from: { name: "Account Manager", email: "am@company.com", type: "team" },
                    to: [{ name: "Dr. Sarah Chen", email: "schen@bilkent.edu.tr", type: "contact" }],
                    cc: [{ name: "Procurement", email: "procurement@bilkent.edu.tr", type: "contact" }]
                }
            }
        ]
    }
};
*/

// Since we're now using company slugs in URLs, we can directly use the accountId
const accountKey = accountId.toLowerCase().replace(/\s+/g, '-');

// Use the accountData passed from server
const account = accountMap[accountKey] || {
    name: "Account",
    logo: "A",
    industry: "Technology",
    website: "example.com",
    employees: "50-200",
    plan: "Pro",
    billing: "Annual",
    revenue: "$1,000,000",
    renewalDate: "2025-12-01",
    location: "San Francisco, CA",
    description: "A technology company focused on delivering innovative solutions.",
    objectives: [],
    summary: "Technology company focused on innovative solutions.",
    highlights: [],
    timeline: []
};

// Filter contacts by account domain
const accountDomain = account.website;
const accountContacts = allContacts.filter(contact => {
    // Extract domain from email
    const emailDomain = contact.email.split('@')[1];
    // Match based on website domain
    return emailDomain && accountDomain && emailDomain.includes(accountDomain.replace('www.', ''));
});

// Sample tickets data
const allTickets = [
    {
        id: "TKT-001",
        subject: "Login Issues with SSO Integration",
        status: "Open",
        priority: "High",
        reporter: "Dr. Mehmet Özkan",
        reporterEmail: "mozkan@bilkent.edu.tr",
        assignee: "Tom Wilson",
        assigneeEmail: "tom.wilson@company.com",
        created: "2024-01-15",
        updated: "2024-01-16",
        description: "Users unable to authenticate through SSO portal",
        account: "Bilkent Universitesi",
        category: "Authentication"
    },
    {
        id: "TKT-002",
        subject: "API Rate Limit Exceeded",
        status: "In Progress",
        priority: "Medium",
        reporter: "Zeynep Kaya",
        reporterEmail: "zkaya@bilkent.edu.tr",
        assignee: "Mike Chen",
        assigneeEmail: "mike.chen@company.com",
        created: "2024-01-12",
        updated: "2024-01-14",
        description: "Hitting API limits during peak usage hours",
        account: "Bilkent Universitesi",
        category: "Performance"
    },
    {
        id: "TKT-003",
        subject: "Feature Request: Bulk Export",
        status: "Open",
        priority: "Low",
        reporter: "Alex Thompson",
        reporterEmail: "alex@flowla.com",
        assignee: "Lisa Park",
        assigneeEmail: "lisa.park@company.com",
        created: "2024-01-14",
        updated: "2024-01-14",
        description: "Need ability to export multiple records at once",
        account: "Flowla",
        category: "Feature Request"
    },
    {
        id: "TKT-004",
        subject: "Data Sync Issues",
        status: "Resolved",
        priority: "High",
        reporter: "Emma Davis",
        reporterEmail: "emma@flowla.com",
        assignee: "Tom Wilson",
        assigneeEmail: "tom.wilson@company.com",
        created: "2024-01-08",
        updated: "2024-01-10",
        description: "Customer data not syncing properly with CRM",
        account: "Flowla",
        category: "Integration"
    },
    {
        id: "TKT-005",
        subject: "Performance Degradation",
        status: "In Progress",
        priority: "High",
        reporter: "David Chen",
        reporterEmail: "dchen@yahoo.com",
        assignee: "Mike Chen",
        assigneeEmail: "mike.chen@company.com",
        created: "2024-01-16",
        updated: "2024-01-17",
        description: "Dashboard loading times have increased significantly",
        account: "Yahoo",
        category: "Performance"
    },
    {
        id: "TKT-006",
        subject: "Security Compliance Review",
        status: "Open",
        priority: "Medium",
        reporter: "Michael Johnson",
        reporterEmail: "mjohnson@microsoft.com",
        assignee: "Sarah Johnson",
        assigneeEmail: "sarah.johnson@company.com",
        created: "2024-01-17",
        updated: "2024-01-17",
        description: "Need security audit for enterprise deployment",
        account: "Microsoft",
        category: "Security"
    }
];

// Filter tickets by account
const accountTickets = allTickets.filter(ticket => {
    return ticket.account === account.name;
});

// Sample tasks data
const allTasks = [
    {
        id: "TSK-001",
        title: "Implement SSO Integration",
        description: "Set up single sign-on integration for university portal",
        assignee: "Mike Chen",
        assigneeEmail: "mike.chen@company.com",
        dueDate: "2024-01-25",
        status: "In Progress",
        priority: "High",
        account: "Bilkent Universitesi",
        category: "Development",
        created: "2024-01-15"
    },
    {
        id: "TSK-002",
        title: "Quarterly Business Review Prep",
        description: "Prepare materials and metrics for Q1 business review meeting",
        assignee: "Sarah Johnson",
        assigneeEmail: "sarah.johnson@company.com",
        dueDate: "2024-01-22",
        status: "Pending",
        priority: "Medium",
        account: "Bilkent Universitesi",
        category: "Account Management",
        created: "2024-01-10"
    },
    {
        id: "TSK-003",
        title: "CRM Integration Setup",
        description: "Configure Salesforce integration for automatic deal updates",
        assignee: "Tom Wilson",
        assigneeEmail: "tom.wilson@company.com",
        dueDate: "2024-01-30",
        status: "Not Started",
        priority: "High",
        account: "Flowla",
        category: "Integration",
        created: "2024-01-14"
    },
    {
        id: "TSK-004",
        title: "Product Demo Follow-up",
        description: "Send demo recording and follow-up materials to stakeholders",
        assignee: "Sarah Johnson",
        assigneeEmail: "sarah.johnson@company.com",
        dueDate: "2024-01-18",
        status: "Completed",
        priority: "Medium",
        account: "Flowla",
        category: "Sales",
        created: "2024-01-10"
    },
    {
        id: "TSK-005",
        title: "Performance Optimization",
        description: "Investigate and resolve dashboard performance issues",
        assignee: "Mike Chen",
        assigneeEmail: "mike.chen@company.com",
        dueDate: "2024-01-20",
        status: "In Progress",
        priority: "High",
        account: "Yahoo",
        category: "Development",
        created: "2024-01-16"
    },
    {
        id: "TSK-006",
        title: "Security Audit Documentation",
        description: "Prepare security compliance documentation for enterprise review",
        assignee: "Lisa Park",
        assigneeEmail: "lisa.park@company.com",
        dueDate: "2024-01-28",
        status: "In Progress",
        priority: "Medium",
        account: "Microsoft",
        category: "Compliance",
        created: "2024-01-17"
    }
];

// Filter tasks by account
const accountTasks = allTasks.filter(task => {
    return task.account === account.name;
});

// Sample notes data
const allNotes = [
    {
        id: "NOTE-001",
        title: "Contract Renewal Discussion",
        content: "Initial conversation about contract renewal went well. They're interested in expanding to additional departments. Key decision makers: Dr. Özkan (IT) and Prof. Yılmaz (CTO). Timeline: Q2 2024.",
        author: "Sarah Johnson",
        authorEmail: "sarah.johnson@company.com",
        created: "2024-01-15",
        updated: "2024-01-15",
        account: "Bilkent Universitesi",
        category: "Sales",
        tags: ["contract", "renewal", "expansion"]
    },
    {
        id: "NOTE-002",
        title: "Technical Requirements",
        content: "Detailed technical requirements discussed in architecture meeting. Need to support 5000+ concurrent users, integrate with existing LDAP, and provide mobile app support. Follow-up meeting scheduled for next week.",
        author: "Mike Chen",
        authorEmail: "mike.chen@company.com",
        created: "2024-01-12",
        updated: "2024-01-14",
        account: "Bilkent Universitesi",
        category: "Technical",
        tags: ["requirements", "architecture", "ldap", "mobile"]
    },
    {
        id: "NOTE-003",
        title: "Competitive Landscape",
        content: "Customer mentioned evaluating Blackboard and Canvas. Our advantages: better API, more flexible customization, superior support. Need to emphasize TCO benefits and integration capabilities.",
        author: "Sarah Johnson",
        authorEmail: "sarah.johnson@company.com",
        created: "2024-01-08",
        updated: "2024-01-08",
        account: "Bilkent Universitesi",
        category: "Competitive",
        tags: ["competitors", "blackboard", "canvas", "positioning"]
    },
    {
        id: "NOTE-004",
        title: "Onboarding Success",
        content: "Flowla team very happy with onboarding process. Alex mentioned our implementation was smoother than previous vendor. Good opportunity for case study and reference.",
        author: "Tom Wilson",
        authorEmail: "tom.wilson@company.com",
        created: "2024-01-10",
        updated: "2024-01-10",
        account: "Flowla",
        category: "Success",
        tags: ["onboarding", "reference", "case-study"]
    },
    {
        id: "NOTE-005",
        title: "Performance Concerns",
        content: "Dashboard performance has been declining. Need to investigate database queries and consider caching improvements. Customer is understanding but this needs priority attention.",
        author: "Mike Chen",
        authorEmail: "mike.chen@company.com",
        created: "2024-01-16",
        updated: "2024-01-16",
        account: "Yahoo",
        category: "Technical",
        tags: ["performance", "database", "caching"]
    },
    {
        id: "NOTE-006",
        title: "Enterprise Security Requirements",
        content: "Microsoft has strict security requirements for enterprise deployment. Need SOC2 compliance, pen testing reports, and detailed security architecture documentation. Timeline is tight.",
        author: "Lisa Park",
        authorEmail: "lisa.park@company.com",
        created: "2024-01-17",
        updated: "2024-01-17",
        account: "Microsoft",
        category: "Security",
        tags: ["security", "compliance", "soc2", "enterprise"]
    }
];

// Filter notes by account
const accountNotes = allNotes.filter(note => {
    return note.account === account.name;
});

// Sample usage metrics data
const usageMetrics = {
    'Bilkent Universitesi': {
        activeUsers: 1247,
        totalUsers: 1850,
        monthlyLogins: 18420,
        avgSessionDuration: '24m 35s',
        topFeatures: [
            { name: 'Student Portal', usage: 87, users: 1084 },
            { name: 'Grade Management', usage: 72, users: 896 },
            { name: 'Course Materials', usage: 65, users: 812 },
            { name: 'Assignment Submission', usage: 58, users: 723 },
            { name: 'Discussion Forums', usage: 34, users: 425 }
        ],
        monthlyTrend: [
            { month: 'Sep', logins: 15200, users: 1180 },
            { month: 'Oct', logins: 16800, users: 1220 },
            { month: 'Nov', logins: 17500, users: 1195 },
            { month: 'Dec', logins: 14200, users: 1050 },
            { month: 'Jan', logins: 18420, users: 1247 }
        ],
        storageUsed: '2.3 TB',
        storageLimit: '5 TB',
        apiCalls: 145680,
        apiLimit: 500000
    },
    'Flowla': {
        activeUsers: 23,
        totalUsers: 45,
        monthlyLogins: 890,
        avgSessionDuration: '18m 12s',
        topFeatures: [
            { name: 'Sales Pipeline', usage: 95, users: 22 },
            { name: 'Client Portals', usage: 78, users: 18 },
            { name: 'Document Sharing', usage: 67, users: 15 },
            { name: 'Analytics Dashboard', usage: 45, users: 10 },
            { name: 'Team Collaboration', usage: 23, users: 5 }
        ],
        monthlyTrend: [
            { month: 'Sep', logins: 720, users: 18 },
            { month: 'Oct', logins: 810, users: 20 },
            { month: 'Nov', logins: 765, users: 19 },
            { month: 'Dec', logins: 680, users: 17 },
            { month: 'Jan', logins: 890, users: 23 }
        ],
        storageUsed: '45 GB',
        storageLimit: '100 GB',
        apiCalls: 12450,
        apiLimit: 50000
    },
    'Yahoo': {
        activeUsers: 8945,
        totalUsers: 12000,
        monthlyLogins: 125670,
        avgSessionDuration: '32m 18s',
        topFeatures: [
            { name: 'Email Analytics', usage: 92, users: 8230 },
            { name: 'User Segmentation', usage: 85, users: 7603 },
            { name: 'Campaign Management', usage: 78, users: 6977 },
            { name: 'A/B Testing', usage: 67, users: 5993 },
            { name: 'Performance Metrics', usage: 54, users: 4830 }
        ],
        monthlyTrend: [
            { month: 'Sep', logins: 118500, users: 8200 },
            { month: 'Oct', logins: 122300, users: 8650 },
            { month: 'Nov', logins: 119800, users: 8400 },
            { month: 'Dec', logins: 115200, users: 8100 },
            { month: 'Jan', logins: 125670, users: 8945 }
        ],
        storageUsed: '12.8 TB',
        storageLimit: '25 TB',
        apiCalls: 2856700,
        apiLimit: 5000000
    },
    'Microsoft': {
        activeUsers: 24750,
        totalUsers: 45000,
        monthlyLogins: 487920,
        avgSessionDuration: '45m 22s',
        topFeatures: [
            { name: 'Enterprise SSO', usage: 98, users: 24255 },
            { name: 'Admin Dashboard', usage: 89, users: 22028 },
            { name: 'Security Monitoring', usage: 82, users: 20295 },
            { name: 'User Management', usage: 75, users: 18563 },
            { name: 'Compliance Reports', usage: 68, users: 16830 }
        ],
        monthlyTrend: [
            { month: 'Sep', logins: 445200, users: 23100 },
            { month: 'Oct', logins: 467800, users: 24200 },
            { month: 'Nov', logins: 452300, users: 23800 },
            { month: 'Dec', logins: 421600, users: 22500 },
            { month: 'Jan', logins: 487920, users: 24750 }
        ],
        storageUsed: '48.2 TB',
        storageLimit: '100 TB',
        apiCalls: 8945620,
        apiLimit: 15000000
    }
};

// Get usage data for current account
const accountUsage = usageMetrics[account.name] || {
    activeUsers: 0,
    totalUsers: 0,
    monthlyLogins: 0,
    avgSessionDuration: '0m 0s',
    topFeatures: [],
    monthlyTrend: [],
    storageUsed: '0 GB',
    storageLimit: '0 GB',
    apiCalls: 0,
    apiLimit: 0
};

// Generate ticket summary
function generateTicketSummary(tickets) {
    if (!tickets || tickets.length === 0) {
        return "No active support tickets at this time.";
    }
    
    const openTickets = tickets.filter(t => t.status !== 'Resolved');
    const highPriorityTickets = tickets.filter(t => t.priority === 'High' && t.status !== 'Resolved');
    const oldTickets = tickets.filter(t => {
        const created = new Date(t.created);
        const daysDiff = Math.floor((new Date() - created) / (1000 * 60 * 60 * 24));
        return daysDiff > 2 && t.status !== 'Resolved';
    });
    
    let summary = `There are ${openTickets.length} open ticket${openTickets.length !== 1 ? 's' : ''}`;
    
    if (highPriorityTickets.length > 0) {
        summary += `, including ${highPriorityTickets.length} high priority ticket${highPriorityTickets.length !== 1 ? 's' : ''}`;
        
        if (oldTickets.length > 0) {
            const oldHighPriority = oldTickets.filter(t => t.priority === 'High');
            if (oldHighPriority.length > 0) {
                summary += ` that ${oldHighPriority.length === 1 ? 'has' : 'have'} been open for more than 2 days`;
            }
        }
    } else if (oldTickets.length > 0) {
        summary += `, with ${oldTickets.length} open for more than 2 days`;
    }
    
    summary += '.';
    return summary;
}

// Generate usage summary
function generateUsageSummary(currentUsage, accountName) {
    if (!currentUsage || !currentUsage.monthlyTrend || currentUsage.monthlyTrend.length < 2) {
        return "Usage analytics are being processed and will be available soon.";
    }
    
    const currentMonth = currentUsage.monthlyTrend[currentUsage.monthlyTrend.length - 1];
    const previousMonth = currentUsage.monthlyTrend[currentUsage.monthlyTrend.length - 2];
    
    const mauGrowth = ((currentMonth.users - previousMonth.users) / previousMonth.users * 100).toFixed(0);
    const loginGrowth = ((currentMonth.logins - previousMonth.logins) / previousMonth.logins * 100).toFixed(0);
    
    let summary = `Monthly Active Users (MAU) ${mauGrowth >= 0 ? 'increased' : 'decreased'} ${Math.abs(mauGrowth)}% last month`;
    
    if (Math.abs(loginGrowth) > 5) {
        summary += ` and total logins ${loginGrowth >= 0 ? 'grew' : 'declined'} by ${Math.abs(loginGrowth)}%`;
    }
    
    // Add storage or API usage if significant
    const storageUsed = parseInt(currentUsage.storageUsed);
    const storageLimit = parseInt(currentUsage.storageLimit);
    const storagePercent = Math.round((storageUsed / storageLimit) * 100);
    
    if (storagePercent > 80) {
        summary += `. Storage usage is at ${storagePercent}% of capacity`;
    }
    
    summary += '.';
    return summary;
}

// Helper function to get participant display with visual indicators
function getParticipantDisplay(participant) {
    if (typeof participant === 'string') {
        // Legacy format - assume contact
        const cleanName = participant.replace(/\s*\(.*?\)\s*/g, '').trim();
        const id = cleanName.toLowerCase().replace(/[^\w\s-]/g, '').replace(/\s+/g, '-');
        return { name: cleanName, id: id, type: 'contact' };
    } else {
        // New format with type information
        const id = participant.name.toLowerCase().replace(/[^\w\s-]/g, '').replace(/\s+/g, '-');
        return { name: participant.name, id: id, type: participant.type || 'contact', email: participant.email };
    }
}

// Helper function to get icon for participant type
function getParticipantIcon(type) {
    switch(type) {
        case 'contact': return '👤'; // Customer contact
        case 'user': return '🏢'; // Internal user
        case 'third-party': return '🤝'; // Third party
        default: return '👤';
    }
}

// Helper function to get CSS class for participant type
function getParticipantClass(type) {
    return 'participant-' + (type || 'contact');
}
%>

<% layout = false %>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= account.name %> - Customer Management</title>
    <link rel="stylesheet" href="/css/styles.css">
</head>
<body>
    <div class="app-container">
        <%- include('../partials/sidebar') %>
        <div class="main-content account-details-page">
            <div class="account-header">
                <div class="account-header-top">
                    <a href="/accounts" class="back-link">
                        <svg viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z"/>
                        </svg>
                        Back to Accounts
                    </a>
                </div>
                <div class="account-info">
                    <div class="account-logo-large" style="background-color: #3498db;">
                        <%= account.logo %>
                    </div>
                    <div class="account-details">
                        <h1><%= account.name %></h1>
                        <div class="account-meta">
                            <span class="meta-item">
                                <svg viewBox="0 0 20 20" fill="currentColor">
                                    <path d="M9 6a3 3 0 11-6 0 3 3 0 016 0zM17 6a3 3 0 11-6 0 3 3 0 016 0zM12.93 17c.046-.327.07-.66.07-1a6.97 6.97 0 00-1.5-4.33A5 5 0 0119 16v1h-6.07zM6 11a5 5 0 015 5v1H1v-1a5 5 0 015-5z"/>
                                </svg>
                                <%= account.employees %>
                            </span>
                            <span class="meta-item">
                                <svg viewBox="0 0 20 20" fill="currentColor">
                                    <path fill-rule="evenodd" d="M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z"/>
                                </svg>
                                <%= account.plan %>
                            </span>
                            <span class="meta-item">
                                <svg viewBox="0 0 20 20" fill="currentColor">
                                    <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z"/>
                                </svg>
                                <%= account.billing %>
                            </span>
                            <span class="meta-item">
                                <svg viewBox="0 0 20 20" fill="currentColor">
                                    <path d="M8.433 7.418c.155-.103.346-.196.567-.267v1.698a2.305 2.305 0 01-.567-.267C8.07 8.34 8 8.114 8 8c0-.114.07-.34.433-.582zM11 12.849v-1.698c.22.071.412.164.567.267.364.243.433.468.433.582 0 .114-.07.34-.433.582a2.305 2.305 0 01-.567.267z"/>
                                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-13a1 1 0 10-2 0v.092a4.535 4.535 0 00-1.676.662C6.602 6.234 6 7.009 6 8c0 .99.602 1.765 1.324 2.246.48.32 1.054.545 1.676.662v1.941c-.391-.127-.68-.317-.843-.504a1 1 0 10-1.51 1.31c.562.649 1.413 1.076 2.353 1.253V15a1 1 0 102 0v-.092a4.535 4.535 0 001.676-.662C13.398 13.766 14 12.991 14 12c0-.99-.602-1.765-1.324-2.246A4.535 4.535 0 0011 9.092V7.151c.391.127.68.317.843.504a1 1 0 101.511-1.31c-.563-.649-1.413-1.076-2.354-1.253V5z"/>
                                </svg>
                                ARR: <%= account.revenue %>
                                <% if (account.billing === 'Annual' && account.renewalDate) { %>
                                    <% 
                                    const renewalDate = new Date(account.renewalDate);
                                    const today = new Date();
                                    const diffTime = renewalDate - today;
                                    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
                                    const isWithin30 = diffDays <= 30 && diffDays > 0;
                                    const isWithin90 = diffDays <= 90 && diffDays > 30;
                                    const renewalClass = isWithin30 ? 'renewal-urgent' : isWithin90 ? 'renewal-warning' : 'renewal-normal';
                                    const formattedDate = renewalDate.toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' });
                                    %>
                                    • Renewal: <span class="<%= renewalClass %>"><%= formattedDate %></span>
                                <% } %>
                            </span>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Chat Sidebar -->
            <div class="chat-sidebar account-chat-sidebar" id="chatSidebar">
                <!-- Resize Handle -->
                <div class="chat-resize-handle" id="chatResizeHandle"></div>
                <!-- Chat Header -->
                <div class="chat-header">
                    <div class="chat-title">
                        <div class="chat-account-info">
                            <div class="chat-account-logo" style="background-color: #3498db;">
                                <%= account.logo %>
                            </div>
                            <div class="chat-account-details">
                                <span class="chat-account-name"><%= account.name %></span>
                                <span class="chat-assistant-name">AI Assistant</span>
                            </div>
                        </div>
                        <span class="chat-status">Online</span>
                    </div>
                    <button class="chat-minimize-btn" id="chatMinimizeBtn">
                        <svg viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"/>
                        </svg>
                    </button>
                </div>

                <!-- Chat Messages -->
                <div class="chat-messages" id="chatMessages">
                    <div class="message ai">
                        <div class="message-avatar">🤖</div>
                        <div class="message-content">
                            <div class="message-text">
                                Hi! I'm here to help you with <%= account.name %>. I can help you generate SQL queries, analyze account data, and answer questions about this customer.
                            </div>
                            <div class="message-timestamp">Just now</div>
                        </div>
                    </div>
                </div>

                <!-- Chat Input -->
                <div class="chat-input-container">
                    <div class="chat-quick-actions">
                        <button class="quick-action-btn" data-action="generate-sql">
                            🔍 Generate SQL
                        </button>
                        <button class="quick-action-btn" data-action="analyze-account">
                            📊 Analyze Account
                        </button>
                        <button class="quick-action-btn" data-action="show-contacts">
                            👥 Show Contacts
                        </button>
                    </div>
                    <div class="chat-input-wrapper">
                        <textarea class="chat-input" placeholder="Ask about <%= account.name %> or generate SQL queries..." rows="1" id="chatInput"></textarea>
                        <button class="chat-send-btn" id="chatSendBtn">
                            <svg viewBox="0 0 20 20" fill="currentColor">
                                <path d="M10.894 2.553a1 1 0 00-1.788 0l-7 14a1 1 0 001.169 1.409l5-1.429A1 1 0 009 15.571V11a1 1 0 112 0v4.571a1 1 0 00.725.962l5 1.428a1 1 0 001.17-1.408l-7-14z"/>
                            </svg>
                        </button>
                    </div>
                </div>
            </div>

            <!-- Chat Toggle Button -->
            <button class="chat-toggle-btn" id="chatToggleBtn">
                <svg viewBox="0 0 20 20" fill="currentColor">
                    <path d="M2 5a2 2 0 012-2h7a2 2 0 012 2v4a2 2 0 01-2 2H9l-3 3v-3H4a2 2 0 01-2-2V5z"/>
                    <path d="M15 7v2a4 4 0 01-4 4H9.828l-1.766 1.767c.28.149.599.233.938.233h2l3 3v-3h2a2 2 0 002-2V9a2 2 0 00-2-2h-1z"/>
                </svg>
                <span class="chat-badge">AI</span>
            </button>

            <div class="account-content">
                <!-- Account Tabs -->
                <div class="account-tabs">
                    <div class="tab-list">
                        <button class="account-tab active" data-tab="overview">Overview</button>
                        <button class="account-tab" data-tab="highlights">Highlights</button>
                        <button class="account-tab" data-tab="interactions">Interactions</button>
                        <button class="account-tab" data-tab="contacts">Contacts</button>
                        <button class="account-tab" data-tab="tickets">Tickets</button>
                        <button class="account-tab" data-tab="usage">Usage</button>
                        <button class="account-tab" data-tab="notes">Notes</button>
                        <button class="account-tab" data-tab="tasks">Tasks</button>
                        <button class="account-tab" data-tab="journey">Journey</button>
                    </div>
                </div>

                <!-- Tab Content -->
                <div class="tab-content">
                    <!-- NEW Overview Tab (Alternative Layout) -->
                    <div class="tab-pane active" id="overview-tab">
                        <div class="overview-new-layout-v2">
                            <!-- Description Section Full Width -->
                            <div class="description-section" id="descriptionSection">
                                <div class="description-content" id="descriptionContent">
                                    <p><%= account.description || account.summary %></p>
                                </div>
                                <button class="description-expand-btn" id="descriptionExpandBtn">
                                    <svg viewBox="0 0 20 20" fill="currentColor">
                                        <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd"/>
                                    </svg>
                                </button>
                            </div>

                            <!-- Two Column Layout -->
                            <div class="overview-columns">
                                <!-- Left Column: Highlights -->
                                <div class="overview-left-col">
                                    <div class="summary-section highlights-full">
                                        <h3><a href="#" class="tab-link section-title-link" data-tab="highlights">Highlights</a></h3>
                                        <% if (account.highlights && account.highlights.length > 0) { %>
                                            <% account.highlights.slice(0, 2).forEach(highlight => { %>
                                                <div class="highlight-card <%= highlight.type %>">
                                                    <div class="highlight-header">
                                                        <span class="highlight-label"><%= highlight.title %></span>
                                                        <span class="highlight-source"><%= highlight.source %></span>
                                                    </div>
                                                    <p class="highlight-content"><%= highlight.content %></p>
                                                    <span class="highlight-date"><%= highlight.date %></span>
                                                </div>
                                            <% }) %>
                                        <% } else { %>
                                            <p class="no-highlights">No recent highlights</p>
                                        <% } %>
                                    </div>
                                </div>

                                <!-- Right Column: Tasks, Usage, Tickets -->
                                <div class="overview-right-col">
                                    <!-- Tasks Section -->
                                    <div class="summary-section">
                                        <h3><a href="#" class="tab-link section-title-link" data-tab="tasks">Tasks</a></h3>
                                        <div class="summary-content">
                                            <%
                                            // Generate tasks summary
                                            let tasksSummary = "No active tasks at this time.";
                                            if (accountTasks && accountTasks.length > 0) {
                                                const activeTasks = accountTasks.filter(t => t.status !== 'Completed');
                                                const overdueTasks = accountTasks.filter(t => {
                                                    if (t.dueDate && t.status !== 'Completed') {
                                                        const due = new Date(t.dueDate);
                                                        return due < new Date();
                                                    }
                                                    return false;
                                                });
                                                
                                                if (activeTasks.length > 0) {
                                                    tasksSummary = `${activeTasks.length} active task${activeTasks.length !== 1 ? 's' : ''}`;
                                                    if (overdueTasks.length > 0) {
                                                        tasksSummary += `, ${overdueTasks.length} overdue`;
                                                    }
                                                    tasksSummary += '.';
                                                }
                                            }
                                            %>
                                            <p><%= tasksSummary %></p>
                                        </div>
                                    </div>

                                    <!-- Usage Section -->
                                    <div class="summary-section">
                                        <h3><a href="#" class="tab-link section-title-link" data-tab="usage">Usage</a></h3>
                                        <div class="summary-content">
                                            <p><%= generateUsageSummary(accountUsage, account.name) %></p>
                                        </div>
                                    </div>

                                    <!-- Tickets Section -->
                                    <div class="summary-section">
                                        <h3><a href="#" class="tab-link section-title-link" data-tab="tickets">Tickets</a></h3>
                                        <div class="summary-content">
                                            <p><%= generateTicketSummary(accountTickets) %></p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Highlights Tab -->
                    <div class="tab-pane" id="highlights-tab">
                        <div class="highlights-full-section">
                            
                            <% if (account.highlights && account.highlights.length > 0) { %>
                                <% account.highlights.forEach(highlight => { %>
                                    <div class="highlight-card <%= highlight.type %>">
                                        <div class="highlight-header">
                                            <span class="highlight-label"><%= highlight.title %></span>
                                            <span class="highlight-source"><%= highlight.source %></span>
                                        </div>
                                        <p class="highlight-content"><%= highlight.content %></p>
                                        <span class="highlight-date"><%= highlight.date %></span>
                                    </div>
                                <% }) %>
                            <% } else { %>
                                <div class="empty-state">
                                    <svg viewBox="0 0 20 20" fill="currentColor" class="empty-icon">
                                        <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"/>
                                    </svg>
                                    <p>No highlights available for this account</p>
                                </div>
                            <% } %>
                        </div>
                    </div>

                    <!-- OLD Overview Tab (Preserved as backup) -->
                    <!--
                    <div class="tab-pane" id="overview-tab-old">
                        <div class="content-grid">
                            <div class="overview-left-column">
                                <div class="overview-text-section">
                                    <div class="expandable-section preview" id="overviewSection">
                                        <div class="expandable-header">
                                            <h3 class="expandable-title">Company Overview</h3>
                                        </div>
                                        <div class="expandable-controls">
                                            <button class="expandable-toggle" id="overviewToggle">
                                                <span class="toggle-text">Show All</span>
                                                <svg class="toggle-icon" viewBox="0 0 20 20" fill="currentColor">
                                                    <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd"/>
                                                </svg>
                                            </button>
                                        </div>
                                        <div class="expandable-content">
                                            <div class="expandable-content-inner" id="overviewContentInner">
                                                <div class="overview-paragraph">
                                                    <p><%= account.description || account.summary %></p>
                                                </div>
                                                
                                                <% if (account.objectives && account.objectives.length > 0) { %>
                                                <div class="overview-paragraph">
                                                    <p>The company's primary strategic objectives include:</p>
                                                    <ul class="objectives-list">
                                                        <% account.objectives.forEach(objective => { %>
                                                            <li><%= objective %></li>
                                                        <% }) %>
                                                    </ul>
                                                </div>
                                                <% } %>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <div class="summary-section">
                                        <div class="summary-item">
                                            <p><%= generateTicketSummary(accountTickets) %> 
                                                <% if (accountTickets.length > 0) { %>
                                                    <a href="#" class="tab-link" data-tab="tickets">View all tickets →</a>
                                                <% } %>
                                            </p>
                                        </div>
                                        
                                        <div class="summary-item">
                                            <p><%= generateUsageSummary(accountUsage, account.name) %> 
                                                <% if (accountUsage.monthlyTrend.length > 0) { %>
                                                    <a href="#" class="tab-link" data-tab="usage">View detailed analytics →</a>
                                                <% } %>
                                            </p>
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="highlights-section">
                                    <h2>Key Highlights</h2>
                                    <% account.highlights.forEach(highlight => { %>
                                        <div class="highlight-card <%= highlight.type %>">
                                            <div class="highlight-header">
                                                <span class="highlight-label"><%= highlight.title %></span>
                                                <span class="highlight-source"><%= highlight.source %></span>
                                            </div>
                                            <p class="highlight-content"><%= highlight.content %></p>
                                            <span class="highlight-date"><%= highlight.date %></span>
                                        </div>
                                    <% }) %>
                                </div>
                            </div>

                            <div class="timeline-section">
                                                <% account.timeline.forEach((item, index) => { %>
                            <div class="timeline-item">
                                <div class="timeline-marker <%= item.type %>">
                                    <% if (item.type === 'email') { %>
                                        <svg viewBox="0 0 20 20" fill="currentColor">
                                            <path d="M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z"/>
                                            <path d="M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z"/>
                                        </svg>
                                    <% } else if (item.type === 'meeting') { %>
                                        <svg viewBox="0 0 20 20" fill="currentColor">
                                            <path d="M2 6a2 2 0 012-2h6a2 2 0 012 2v8a2 2 0 01-2 2H4a2 2 0 01-2-2V6zM14.553 7.106A1 1 0 0014 8v4a1 1 0 00.553.894l2 1A1 1 0 0018 13V7a1 1 0 00-1.447-.894l-2 1z"/>
                                        </svg>
                                    <% } else if (item.type === 'ticket') { %>
                                        <svg viewBox="0 0 20 20" fill="currentColor">
                                            <path d="M2 6a2 2 0 012-2h12a2 2 0 012 2v2a2 2 0 100 4v2a2 2 0 01-2 2H4a2 2 0 01-2-2v-2a2 2 0 100-4V6z"/>
                                        </svg>
                                    <% } else if (item.type === 'call') { %>
                                        <svg viewBox="0 0 20 20" fill="currentColor">
                                            <path d="M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z"/>
                                        </svg>
                                    <% } %>
                                </div>
                                <div class="timeline-content">
                                    <h4><%= item.title %></h4>
                                    <p><%= item.description %></p>
                                    
                                    <% if (item.participants) { %>
                                        <div class="participants">
                                            <% if (item.type === 'email') { %>
                                                <div class="participant-row">
                                                    <span class="participant-label">From:</span>
                                                    <span class="participant-name">
                                                        <% const fromData = getParticipantDisplay(item.participants.from); %>
                                                        <span class="participant-type-indicator <%= getParticipantClass(fromData.type) %>">
                                                            <%= getParticipantIcon(fromData.type) %>
                                                        </span>
                                                        <% if (fromData.type === 'contact') { %>
                                                            <a href="/contacts/<%= fromData.id %>" class="participant-link <%= getParticipantClass(fromData.type) %>">
                                                                <%= fromData.name %>
                                                            </a>
                                                        <% } else { %>
                                                            <span class="participant-link <%= getParticipantClass(fromData.type) %>">
                                                                <%= fromData.name %>
                                                            </span>
                                                        <% } %>
                                                    </span>
                                                </div>
                                                <div class="participant-row">
                                                    <span class="participant-label">To:</span>
                                                    <span class="participant-name">
                                                        <% item.participants.to.forEach((participant, index) => { %>
                                                            <% const toData = getParticipantDisplay(participant); %>
                                                            <span class="participant-type-indicator <%= getParticipantClass(toData.type) %>">
                                                                <%= getParticipantIcon(toData.type) %>
                                                            </span>
                                                            <% if (toData.type === 'contact') { %>
                                                                <a href="/contacts/<%= toData.id %>" class="participant-link <%= getParticipantClass(toData.type) %>">
                                                                    <%= toData.name %>
                                                                </a>
                                                            <% } else { %>
                                                                <span class="participant-link <%= getParticipantClass(toData.type) %>">
                                                                    <%= toData.name %>
                                                                </span>
                                                            <% } %><%= index < item.participants.to.length - 1 ? ', ' : '' %>
                                                        <% }) %>
                                                    </span>
                                                </div>
                                                <% if (item.participants.cc && item.participants.cc.length > 0) { %>
                                                <div class="participant-row">
                                                    <span class="participant-label">CC:</span>
                                                    <span class="participant-name">
                                                        <% item.participants.cc.forEach((participant, index) => { %>
                                                            <% const ccData = getParticipantDisplay(participant); %>
                                                            <span class="participant-type-indicator <%= getParticipantClass(ccData.type) %>">
                                                                <%= getParticipantIcon(ccData.type) %>
                                                            </span>
                                                            <% if (ccData.type === 'contact') { %>
                                                                <a href="/contacts/<%= ccData.id %>" class="participant-link <%= getParticipantClass(ccData.type) %>">
                                                                    <%= ccData.name %>
                                                                </a>
                                                            <% } else { %>
                                                                <span class="participant-link <%= getParticipantClass(ccData.type) %>">
                                                                    <%= ccData.name %>
                                                                </span>
                                                            <% } %><%= index < item.participants.cc.length - 1 ? ', ' : '' %>
                                                        <% }) %>
                                                    </span>
                                                </div>
                                                <% } %>
                                            <% } else if (item.type === 'meeting' || item.type === 'call') { %>
                                                <% if (item.participants.organizer) { %>
                                                <div class="participant-row">
                                                    <span class="participant-label">Organizer:</span>
                                                    <span class="participant-name">
                                                        <% const organizerData = getParticipantDisplay(item.participants.organizer); %>
                                                        <span class="participant-type-indicator <%= getParticipantClass(organizerData.type) %>">
                                                            <%= getParticipantIcon(organizerData.type) %>
                                                        </span>
                                                        <% if (organizerData.type === 'contact') { %>
                                                            <a href="/contacts/<%= organizerData.id %>" class="participant-link <%= getParticipantClass(organizerData.type) %>">
                                                                <%= organizerData.name %>
                                                            </a>
                                                        <% } else { %>
                                                            <span class="participant-link <%= getParticipantClass(organizerData.type) %>">
                                                                <%= organizerData.name %>
                                                            </span>
                                                        <% } %>
                                                    </span>
                                                </div>
                                                <% } %>
                                                <div class="participant-row">
                                                    <span class="participant-label">Attendees:</span>
                                                    <span class="participant-name">
                                                        <% item.participants.attendees.forEach((participant, index) => { %>
                                                            <% const attendeeData = getParticipantDisplay(participant); %>
                                                            <span class="participant-type-indicator <%= getParticipantClass(attendeeData.type) %>">
                                                                <%= getParticipantIcon(attendeeData.type) %>
                                                            </span>
                                                            <% if (attendeeData.type === 'contact') { %>
                                                                <a href="/contacts/<%= attendeeData.id %>" class="participant-link <%= getParticipantClass(attendeeData.type) %>">
                                                                    <%= attendeeData.name %>
                                                                </a>
                                                            <% } else { %>
                                                                <span class="participant-link <%= getParticipantClass(attendeeData.type) %>">
                                                                    <%= attendeeData.name %>
                                                                </span>
                                                            <% } %><%= index < item.participants.attendees.length - 1 ? ', ' : '' %>
                                                        <% }) %>
                                                    </span>
                                                </div>
                                            <% } else if (item.type === 'ticket') { %>
                                                <div class="participant-row">
                                                    <span class="participant-label">Reporter:</span>
                                                    <span class="participant-name">
                                                        <% const reporterData = getParticipantDisplay(item.participants.reporter); %>
                                                        <span class="participant-type-indicator <%= getParticipantClass(reporterData.type) %>">
                                                            <%= getParticipantIcon(reporterData.type) %>
                                                        </span>
                                                        <% if (reporterData.type === 'contact') { %>
                                                            <a href="/contacts/<%= reporterData.id %>" class="participant-link <%= getParticipantClass(reporterData.type) %>">
                                                                <%= reporterData.name %>
                                                            </a>
                                                        <% } else { %>
                                                            <span class="participant-link <%= getParticipantClass(reporterData.type) %>">
                                                                <%= reporterData.name %>
                                                            </span>
                                                        <% } %>
                                                    </span>
                                                </div>
                                                <div class="participant-row">
                                                    <span class="participant-label">Assignee:</span>
                                                    <span class="participant-name">
                                                        <% const assigneeData = getParticipantDisplay(item.participants.assignee); %>
                                                        <span class="participant-type-indicator <%= getParticipantClass(assigneeData.type) %>">
                                                            <%= getParticipantIcon(assigneeData.type) %>
                                                        </span>
                                                        <% if (assigneeData.type === 'contact') { %>
                                                            <a href="/contacts/<%= assigneeData.id %>" class="participant-link <%= getParticipantClass(assigneeData.type) %>">
                                                                <%= assigneeData.name %>
                                                            </a>
                                                        <% } else { %>
                                                            <span class="participant-link <%= getParticipantClass(assigneeData.type) %>">
                                                                <%= assigneeData.name %>
                                                            </span>
                                                        <% } %>
                                                    </span>
                                                </div>
                                                <% if (item.participants.watchers && item.participants.watchers.length > 0) { %>
                                                <div class="participant-row">
                                                    <span class="participant-label">Watchers:</span>
                                                    <span class="participant-name">
                                                        <% item.participants.watchers.forEach((participant, index) => { %>
                                                            <% const watcherData = getParticipantDisplay(participant); %>
                                                            <span class="participant-type-indicator <%= getParticipantClass(watcherData.type) %>">
                                                                <%= getParticipantIcon(watcherData.type) %>
                                                            </span>
                                                            <% if (watcherData.type === 'contact') { %>
                                                                <a href="/contacts/<%= watcherData.id %>" class="participant-link <%= getParticipantClass(watcherData.type) %>">
                                                                    <%= watcherData.name %>
                                                                </a>
                                                            <% } else { %>
                                                                <span class="participant-link <%= getParticipantClass(watcherData.type) %>">
                                                                    <%= watcherData.name %>
                                                                </span>
                                                            <% } %><%= index < item.participants.watchers.length - 1 ? ', ' : '' %>
                                                        <% }) %>
                                                    </span>
                                                </div>
                                                <% } %>
                                            <% } %>
                                        </div>
                                    <% } %>
                                    
                                    <div class="timeline-meta">
                                        <span class="timeline-date"><%= item.date %></span>
                                        <span class="timeline-time"><%= item.time %></span>
                                    </div>
                                </div>
                            </div>
                                    <% }) %>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    -->

                    <!-- Interactions Tab -->
                    <div class="tab-pane" id="interactions-tab">
                        <div class="interactions-layout">
                            <!-- Left: Timeline -->
                            <div class="interactions-timeline">
                                <h3>Interaction Timeline</h3>
                                <div class="timeline">
                                    <% account.timeline.forEach((item, index) => { %>
                                        <div class="timeline-item clickable" data-interaction-id="<%= index %>">
                                            <div class="timeline-marker <%= item.type %>">
                                                <% if (item.type === 'email') { %>
                                                    <svg viewBox="0 0 20 20" fill="currentColor">
                                                        <path d="M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z"/>
                                                        <path d="M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z"/>
                                                    </svg>
                                                <% } else if (item.type === 'meeting') { %>
                                                    <svg viewBox="0 0 20 20" fill="currentColor">
                                                        <path d="M2 6a2 2 0 012-2h6a2 2 0 012 2v8a2 2 0 01-2 2H4a2 2 0 01-2-2V6zM14.553 7.106A1 1 0 0014 8v4a1 1 0 00.553.894l2 1A1 1 0 0018 13V7a1 1 0 00-1.447-.894l-2 1z"/>
                                                    </svg>
                                                <% } else if (item.type === 'ticket') { %>
                                                    <svg viewBox="0 0 20 20" fill="currentColor">
                                                        <path d="M2 6a2 2 0 012-2h12a2 2 0 012 2v2a2 2 0 100 4v2a2 2 0 01-2 2H4a2 2 0 01-2-2v-2a2 2 0 100-4V6z"/>
                                                    </svg>
                                                <% } else if (item.type === 'call') { %>
                                                    <svg viewBox="0 0 20 20" fill="currentColor">
                                                        <path d="M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z"/>
                                                    </svg>
                                                <% } %>
                                            </div>
                                            <div class="timeline-content">
                                                <h4><%= item.title %></h4>
                                                <p><%= item.description %></p>
                                                <div class="timeline-meta">
                                                    <span class="timeline-date"><%= item.date %></span>
                                                    <span class="timeline-time"><%= item.time %></span>
                                                </div>
                                            </div>
                                        </div>
                                    <% }) %>
                                </div>
                            </div>

                            <!-- Right: Interaction Details -->
                            <div class="interaction-details">
                                <div class="details-placeholder">
                                    <svg viewBox="0 0 20 20" fill="currentColor" class="placeholder-icon">
                                        <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"/>
                                    </svg>
                                    <p>Select an interaction from the timeline to view details</p>
                                </div>
                                
                                <!-- Details content will be populated by JavaScript -->
                                <div class="details-content" id="interactionDetails">
                                    <!-- Content dynamically inserted here -->
                                </div>
                            </div>
                        </div>

                        <!-- Hidden timeline data for JavaScript -->
                        <script>
                            window.timelineData = <%- JSON.stringify(account.timeline) %>;
                        </script>
                    </div>

                    <!-- Contacts Tab -->
                    <div class="tab-pane" id="contacts-tab">
                        <div class="contacts-section">
                            <div class="section-header">
                                <h3>Contacts</h3>
                                <div class="header-actions">
                                </div>
                            </div>
                            
                            <div class="toolbar">
                                <div class="search-bar">
                                    <svg class="search-icon" viewBox="0 0 20 20" fill="currentColor">
                                        <path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z"/>
                                    </svg>
                                    <input type="text" placeholder="Search contacts..." class="search-input">
                                </div>
                                <div class="toolbar-right">
                                </div>
                            </div>

                            <% if (accountContacts.length > 0) { %>
                                <div class="contacts-table">
                                    <table>
                                        <thead>
                                            <tr>
                                                <th style="width: 250px;">Name<span class="resize-handle"></span></th>
                                                <th style="width: 200px;">Title<span class="resize-handle"></span></th>
                                                <th style="width: 200px;">Email<span class="resize-handle"></span></th>
                                                <th style="width: 250px;">Tags<span class="resize-handle"></span></th>
                                                <th style="width: 150px;">Last Interaction<span class="resize-handle"></span></th>
                                                <th style="width: 100px;">Status<span class="resize-handle"></span></th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <% accountContacts.forEach(contact => { %>
                                            <tr data-contact-id="<%= contact.id %>" data-href="/contacts/<%= contact.id %>">
                                                <td>
                                                    <div class="contact-cell">
                                                        <div class="contact-avatar">
                                                            <%= contact.name.split(' ').map(n => n[0]).join('').substring(0, 2) %>
                                                        </div>
                                                        <div class="contact-info">
                                                            <span class="contact-name"><%= contact.name %></span>
                                                            <% if (contact.linkedin) { %>
                                                                <a href="https://linkedin.com/in/<%= contact.linkedin %>" target="_blank" class="contact-linkedin">LinkedIn</a>
                                                            <% } %>
                                                        </div>
                                                    </div>
                                                </td>
                                                <td><%= contact.title %></td>
                                                <td>
                                                    <a href="mailto:<%= contact.email %>" class="email-link"><%= contact.email %></a>
                                                </td>
                                                <td>
                                                    <div class="contact-tags">
                                                        <% if (contact.tags && contact.tags.length > 0) { %>
                                                            <% contact.tags.forEach(tag => { %>
                                                                <span class="contact-tag <%= tag === 'Economic buyer' ? 'tag-economic' : tag === 'Admin' ? 'tag-admin' : tag === 'Champion' ? 'tag-champion' : tag === 'Exec sponsor' ? 'tag-exec' : tag === 'Power user' ? 'tag-power' : 'tag-default' %>">
                                                                    <%= tag %>
                                                                </span>
                                                            <% }) %>
                                                        <% } %>
                                                    </div>
                                                </td>
                                                <td><%= contact.lastInteraction %></td>
                                                <td>
                                                    <span class="status-badge status-<%= contact.status.toLowerCase() %>">
                                                        <%= contact.status %>
                                                    </span>
                                                </td>
                                            </tr>
                                            <% }) %>
                                        </tbody>
                                    </table>
                                </div>
                                
                                <div class="table-footer">
                                    <div class="pagination-info">
                                        <span><%= accountContacts.length %> contact<%= accountContacts.length !== 1 ? 's' : '' %></span>
                                    </div>
                                </div>
                            <% } else { %>
                                <div class="empty-state">
                                    <svg viewBox="0 0 20 20" fill="currentColor" class="empty-icon">
                                        <path d="M9 6a3 3 0 11-6 0 3 3 0 016 0zM17 6a3 3 0 11-6 0 3 3 0 016 0zM12.93 17c.046-.327.07-.66.07-1a6.97 6.97 0 00-1.5-4.33A5 5 0 0119 16v1h-6.07zM6 11a5 5 0 015 5v1H1v-1a5 5 0 015-5z"/>
                                    </svg>
                                    <h4>No contacts found</h4>
                                    <p>No contacts are associated with this account yet.</p>
                                    <button class="btn-primary">Add Contact</button>
                                </div>
                            <% } %>
                        </div>
                    </div>

                    <!-- Tickets Tab -->
                    <div class="tab-pane" id="tickets-tab">
                        <div class="tickets-section">
                            <div class="section-header">
                                <h3>Support Tickets</h3>
                                <div class="header-actions">
                                    <button class="btn-primary">New Ticket</button>
                                </div>
                            </div>
                            
                            <div class="toolbar">
                                <div class="search-bar">
                                    <svg class="search-icon" viewBox="0 0 20 20" fill="currentColor">
                                        <path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z"/>
                                    </svg>
                                    <input type="text" placeholder="Search tickets..." class="search-input">
                                </div>
                                <div class="toolbar-right">
                                </div>
                            </div>

                            <% if (accountTickets.length > 0) { %>
                                <div class="tickets-table">
                                    <table>
                                        <thead>
                                            <tr>
                                                <th style="width: 120px;">Ticket ID<span class="resize-handle"></span></th>
                                                <th style="width: 300px;">Subject<span class="resize-handle"></span></th>
                                                <th style="width: 100px;">Status<span class="resize-handle"></span></th>
                                                <th style="width: 100px;">Priority<span class="resize-handle"></span></th>
                                                <th style="width: 150px;">Reporter<span class="resize-handle"></span></th>
                                                <th style="width: 150px;">Assignee<span class="resize-handle"></span></th>
                                                <th style="width: 120px;">Created<span class="resize-handle"></span></th>
                                                <th style="width: 150px;">Category<span class="resize-handle"></span></th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <% accountTickets.forEach(ticket => { %>
                                            <tr data-ticket-id="<%= ticket.id %>" data-href="/tickets/<%= ticket.id %>">
                                                <td><span class="ticket-id"><%= ticket.id %></span></td>
                                                <td>
                                                    <div class="ticket-subject">
                                                        <span class="subject-title"><%= ticket.subject %></span>
                                                        <span class="subject-description"><%= ticket.description %></span>
                                                    </div>
                                                </td>
                                                <td>
                                                    <span class="status-badge status-<%= ticket.status.toLowerCase().replace(/\s+/g, '-') %>">
                                                        <%= ticket.status %>
                                                    </span>
                                                </td>
                                                <td>
                                                    <span class="priority-badge priority-<%= ticket.priority.toLowerCase() %>">
                                                        <%= ticket.priority %>
                                                    </span>
                                                </td>
                                                <td>
                                                    <div class="assignee-cell">
                                                        <div class="assignee-avatar">
                                                            <%= ticket.reporter.split(' ').map(n => n[0]).join('').substring(0, 2) %>
                                                        </div>
                                                        <span class="assignee-name"><%= ticket.reporter %></span>
                                                    </div>
                                                </td>
                                                <td>
                                                    <div class="assignee-cell">
                                                        <div class="assignee-avatar internal">
                                                            <%= ticket.assignee.split(' ').map(n => n[0]).join('').substring(0, 2) %>
                                                        </div>
                                                        <span class="assignee-name"><%= ticket.assignee %></span>
                                                    </div>
                                                </td>
                                                <td><%= ticket.created %></td>
                                                <td>
                                                    <span class="category-tag"><%= ticket.category %></span>
                                                </td>
                                            </tr>
                                            <% }) %>
                                        </tbody>
                                    </table>
                                </div>
                                
                                <div class="table-footer">
                                    <div class="pagination-info">
                                        <span><%= accountTickets.length %> ticket<%= accountTickets.length !== 1 ? 's' : '' %></span>
                                    </div>
                                </div>
                            <% } else { %>
                                <div class="empty-state">
                                    <svg viewBox="0 0 20 20" fill="currentColor" class="empty-icon">
                                        <path d="M2 6a2 2 0 012-2h12a2 2 0 012 2v2a2 2 0 100 4v2a2 2 0 01-2 2H4a2 2 0 01-2-2v-2a2 2 0 100-4V6z"/>
                                    </svg>
                                    <h4>No tickets found</h4>
                                    <p>No support tickets have been created for this account yet.</p>
                                    <button class="btn-primary">Create Ticket</button>
                                </div>
                            <% } %>
                        </div>
                    </div>

                    <!-- Usage Tab -->
                    <div class="tab-pane" id="usage-tab">
                        <div class="usage-section">
                            <!-- Header with optional product dropdown -->
                            <div class="usage-header">
                                <div class="usage-title">
                                    <svg viewBox="0 0 20 20" fill="currentColor" class="title-icon">
                                        <path d="M9 2a1 1 0 000 2h2a1 1 0 100-2H9z"/>
                                        <path fill-rule="evenodd" d="M4 5a2 2 0 012-2v1a1 1 0 001 1h6a1 1 0 001-1V3a2 2 0 012 2v6a2 2 0 01-2 2H6a2 2 0 01-2-2V5zm2.5 7a1.5 1.5 0 100-3 1.5 1.5 0 000 3zm2.45 4a2.5 2.5 0 10-4.9 0h4.9zM12 9a1 1 0 100 2h3a1 1 0 100-2h-3zm-1 4a1 1 0 011-1h2a1 1 0 110 2h-2a1 1 0 01-1-1z"/>
                                    </svg>
                                    <h2>Key Metrics</h2>
                                </div>
                                <% if (account.productSubscriptions && account.productSubscriptions.length > 1) { %>
                                <div class="product-selector">
                                    <select class="product-dropdown">
                                        <% account.productSubscriptions.forEach(product => { %>
                                            <option value="<%= product.id %>"><%= product.name %></option>
                                        <% }) %>
                                    </select>
                                    <svg class="dropdown-arrow" viewBox="0 0 20 20" fill="currentColor">
                                        <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"/>
                                    </svg>
                                </div>
                                <% } %>
                            </div>

                            <!-- Key Metrics Grid -->
                            <div class="key-metrics-grid">
                                <!-- Feature Adoption Rate -->
                                <div class="key-metric-card">
                                    <h3>Feature Adoption Rate</h3>
                                    <div class="metric-value">33.83%</div>
                                    <p class="metric-description">The % of monthly active users who have engaged at least once.</p>
                                </div>

                                <!-- Stickiness -->
                                <div class="key-metric-card">
                                    <h3>Stickiness (DAU/MAU)</h3>
                                    <div class="metric-value">2.7%</div>
                                    <p class="metric-description">The % of monthly users who engage with the feature daily.</p>
                                </div>

                                <!-- Feature Retention Rate -->
                                <div class="key-metric-card">
                                    <h3>Feature Retention Rate</h3>
                                    <div class="metric-value">51.09%</div>
                                    <p class="metric-description">The % of users who continued using the feature from the previous period.</p>
                                </div>

                                <!-- Feature Churn Rate -->
                                <div class="key-metric-card">
                                    <h3>Feature Churn Rate</h3>
                                    <div class="metric-value">48.91%</div>
                                    <p class="metric-description">The % of users who stopped using the feature from the previous period.</p>
                                </div>
                            </div>

                            <!-- Usage Analytics Charts -->
                            <div class="usage-analytics-grid">
                                <!-- Monthly Active Users -->
                                <div class="analytics-card large-chart">
                                    <div class="chart-header-section">
                                        <h3>Monthly Active Users</h3>
                                        <div class="chart-header">
                                            <div class="chart-value">90</div>
                                            <div class="chart-change negative">
                                                <svg viewBox="0 0 20 20" fill="currentColor" class="change-icon">
                                                    <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"/>
                                                </svg>
                                                2.17%
                                            </div>
                                        </div>
                                    </div>
                                    <div class="chart-area">
                                        <svg viewBox="0 0 400 120" class="area-chart" data-chart="mau">
                                            <defs>
                                                <linearGradient id="mauGradient" x1="0%" y1="0%" x2="0%" y2="100%">
                                                    <stop offset="0%" style="stop-color:#3b82f6;stop-opacity:0.3"/>
                                                    <stop offset="100%" style="stop-color:#3b82f6;stop-opacity:0.05"/>
                                                </linearGradient>
                                            </defs>
                                            <path d="M0,60 L40,55 L80,58 L120,52 L160,56 L200,54 L240,58 L280,55 L320,60 L360,58 L400,62 L400,120 L0,120 Z" fill="url(#mauGradient)"/>
                                            <path d="M0,60 L40,55 L80,58 L120,52 L160,56 L200,54 L240,58 L280,55 L320,60 L360,58 L400,62" stroke="#3b82f6" stroke-width="2" fill="none"/>
                                            <!-- Invisible hover areas -->
                                            <circle cx="0" cy="60" r="8" fill="transparent" class="chart-point" data-value="92"/>
                                            <circle cx="40" cy="55" r="8" fill="transparent" class="chart-point" data-value="95"/>
                                            <circle cx="80" cy="58" r="8" fill="transparent" class="chart-point" data-value="93"/>
                                            <circle cx="120" cy="52" r="8" fill="transparent" class="chart-point" data-value="97"/>
                                            <circle cx="160" cy="56" r="8" fill="transparent" class="chart-point" data-value="94"/>
                                            <circle cx="200" cy="54" r="8" fill="transparent" class="chart-point" data-value="96"/>
                                            <circle cx="240" cy="58" r="8" fill="transparent" class="chart-point" data-value="93"/>
                                            <circle cx="280" cy="55" r="8" fill="transparent" class="chart-point" data-value="95"/>
                                            <circle cx="320" cy="60" r="8" fill="transparent" class="chart-point" data-value="92"/>
                                            <circle cx="360" cy="58" r="8" fill="transparent" class="chart-point" data-value="93"/>
                                            <circle cx="400" cy="62" r="8" fill="transparent" class="chart-point" data-value="90"/>
                                        </svg>
                                        <div class="chart-tooltip" id="mauTooltip"></div>
                                    </div>
                                    <div class="chart-footer-section">
                                        <p class="chart-description">The number of unique active users in the last 30 days.</p>
                                    </div>
                                </div>

                                <!-- Weekly Active Users -->
                                <div class="analytics-card large-chart">
                                    <div class="chart-header-section">
                                        <h3>Weekly Active Users</h3>
                                        <div class="chart-header">
                                            <div class="chart-value">28</div>
                                            <div class="chart-change positive">
                                                <svg viewBox="0 0 20 20" fill="currentColor" class="change-icon">
                                                    <path fill-rule="evenodd" d="M14.707 12.707a1 1 0 01-1.414 0L10 9.414l-3.293 3.293a1 1 0 01-1.414-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 010 1.414z"/>
                                                </svg>
                                                47.37%
                                            </div>
                                        </div>
                                    </div>
                                    <div class="chart-area">
                                        <svg viewBox="0 0 400 120" class="area-chart" data-chart="wau">
                                            <defs>
                                                <linearGradient id="wauGradient" x1="0%" y1="0%" x2="0%" y2="100%">
                                                    <stop offset="0%" style="stop-color:#10b981;stop-opacity:0.3"/>
                                                    <stop offset="100%" style="stop-color:#10b981;stop-opacity:0.05"/>
                                                </linearGradient>
                                            </defs>
                                            <path d="M0,80 L40,65 L80,70 L120,60 L160,58 L200,62 L240,65 L280,68 L320,70 L360,75 L400,78 L400,120 L0,120 Z" fill="url(#wauGradient)"/>
                                            <path d="M0,80 L40,65 L80,70 L120,60 L160,58 L200,62 L240,65 L280,68 L320,70 L360,75 L400,78" stroke="#10b981" stroke-width="2" fill="none"/>
                                            <!-- Invisible hover areas -->
                                            <circle cx="0" cy="80" r="8" fill="transparent" class="chart-point" data-value="19"/>
                                            <circle cx="40" cy="65" r="8" fill="transparent" class="chart-point" data-value="22"/>
                                            <circle cx="80" cy="70" r="8" fill="transparent" class="chart-point" data-value="21"/>
                                            <circle cx="120" cy="60" r="8" fill="transparent" class="chart-point" data-value="24"/>
                                            <circle cx="160" cy="58" r="8" fill="transparent" class="chart-point" data-value="25"/>
                                            <circle cx="200" cy="62" r="8" fill="transparent" class="chart-point" data-value="23"/>
                                            <circle cx="240" cy="65" r="8" fill="transparent" class="chart-point" data-value="22"/>
                                            <circle cx="280" cy="68" r="8" fill="transparent" class="chart-point" data-value="21"/>
                                            <circle cx="320" cy="70" r="8" fill="transparent" class="chart-point" data-value="20"/>
                                            <circle cx="360" cy="75" r="8" fill="transparent" class="chart-point" data-value="19"/>
                                            <circle cx="400" cy="78" r="8" fill="transparent" class="chart-point" data-value="28"/>
                                        </svg>
                                        <div class="chart-tooltip" id="wauTooltip"></div>
                                    </div>
                                    <div class="chart-footer-section">
                                        <p class="chart-description">The number of unique active users in the last 7 days.</p>
                                    </div>
                                </div>

                                <!-- Daily Active Users -->
                                <div class="analytics-card full-width">
                                    <div class="chart-header-section">
                                        <h3>Daily Active Users (7-day avg)</h3>
                                        <div class="chart-header">
                                            <div class="chart-value">2</div>
                                            <div class="chart-change negative">
                                                <svg viewBox="0 0 20 20" fill="currentColor" class="change-icon">
                                                    <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"/>
                                                </svg>
                                                32%
                                            </div>
                                        </div>
                                    </div>
                                    <div class="chart-area">
                                        <svg viewBox="0 0 800 120" class="line-chart" data-chart="dau">
                                            <path d="M0,90 L25,85 L50,88 L75,82 L100,86 L125,84 L150,88 L175,85 L200,90 L225,88 L250,92 L275,89 L300,87 L325,90 L350,85 L375,88 L400,86 L425,84 L450,87 L475,89 L500,85 L525,88 L550,90 L575,87 L600,85 L625,88 L650,86 L675,89 L700,87 L725,90 L750,88 L775,85 L800,87" stroke="#6366f1" stroke-width="2" fill="none"/>
                                            <!-- Sample hover points for line chart -->
                                            <circle cx="0" cy="90" r="6" fill="transparent" class="chart-point" data-value="1"/>
                                            <circle cx="100" cy="86" r="6" fill="transparent" class="chart-point" data-value="2"/>
                                            <circle cx="200" cy="90" r="6" fill="transparent" class="chart-point" data-value="1"/>
                                            <circle cx="300" cy="87" r="6" fill="transparent" class="chart-point" data-value="2"/>
                                            <circle cx="400" cy="86" r="6" fill="transparent" class="chart-point" data-value="2"/>
                                            <circle cx="500" cy="85" r="6" fill="transparent" class="chart-point" data-value="2"/>
                                            <circle cx="600" cy="85" r="6" fill="transparent" class="chart-point" data-value="2"/>
                                            <circle cx="700" cy="87" r="6" fill="transparent" class="chart-point" data-value="2"/>
                                            <circle cx="800" cy="87" r="6" fill="transparent" class="chart-point" data-value="2"/>
                                        </svg>
                                        <div class="chart-tooltip" id="dauTooltip"></div>
                                    </div>
                                    <div class="chart-footer-section">
                                        <p class="chart-description">The average number of unique active users over the past 7 days.</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Notes Tab -->
                    <div class="tab-pane" id="notes-tab">
                        <div class="notes-section">
                            <div class="section-header">
                                <h3>Account Notes</h3>
                                <div class="header-actions">
                                    <button class="btn-primary">New Note</button>
                                </div>
                            </div>
                            
                            <div class="toolbar">
                                <div class="search-bar">
                                    <svg class="search-icon" viewBox="0 0 20 20" fill="currentColor">
                                        <path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z"/>
                                    </svg>
                                    <input type="text" placeholder="Search notes..." class="search-input">
                                </div>
                                <div class="toolbar-right">
                                    <select class="category-filter">
                                        <option value="">All Categories</option>
                                        <option value="sales">Sales</option>
                                        <option value="technical">Technical</option>
                                        <option value="competitive">Competitive</option>
                                        <option value="success">Success</option>
                                        <option value="security">Security</option>
                                    </select>
                                    <button class="btn-sort">
                                        <svg viewBox="0 0 20 20" fill="currentColor">
                                            <path d="M3 3a1 1 0 000 2h11a1 1 0 100-2H3zM3 7a1 1 0 000 2h5a1 1 0 000-2H3zM3 11a1 1 0 100 2h4a1 1 0 100-2H3zM13 16a1 1 0 102 0v-5.586l1.293 1.293a1 1 0 001.414-1.414l-3-3a1 1 0 00-1.414 0l-3 3a1 1 0 101.414 1.414L13 10.414V16z"/>
                                        </svg>
                                        Sort
                                    </button>
                                </div>
                            </div>

                            <% if (accountNotes.length > 0) { %>
                                <div class="notes-list">
                                    <% accountNotes.forEach(note => { %>
                                    <div class="note-card" data-note-id="<%= note.id %>">
                                        <div class="note-header">
                                            <div class="note-title-section">
                                                <h4 class="note-title"><%= note.title %></h4>
                                                <div class="note-meta">
                                                    <span class="note-author">
                                                        <div class="author-avatar">
                                                            <%= note.author.split(' ').map(n => n[0]).join('').substring(0, 2) %>
                                                        </div>
                                                        <%= note.author %>
                                                    </span>
                                                    <span class="note-date"><%= note.created %></span>
                                                    <% if (note.updated !== note.created) { %>
                                                        <span class="note-updated">(edited <%= note.updated %>)</span>
                                                    <% } %>
                                                </div>
                                            </div>
                                            <div class="note-actions">
                                                <span class="category-badge category-<%= note.category.toLowerCase() %>">
                                                    <%= note.category %>
                                                </span>
                                                <button class="note-menu-btn">
                                                    <svg viewBox="0 0 20 20" fill="currentColor">
                                                        <path d="M10 6a2 2 0 110-4 2 2 0 010 4zM10 12a2 2 0 110-4 2 2 0 010 4zM10 18a2 2 0 110-4 2 2 0 010 4z"/>
                                                    </svg>
                                                </button>
                                            </div>
                                        </div>
                                        <div class="note-content">
                                            <p><%= note.content %></p>
                                        </div>
                                        <% if (note.tags && note.tags.length > 0) { %>
                                        <div class="note-tags">
                                            <% note.tags.forEach(tag => { %>
                                                <span class="note-tag">#<%= tag %></span>
                                            <% }) %>
                                        </div>
                                        <% } %>
                                    </div>
                                    <% }) %>
                                </div>
                                
                                <div class="table-footer">
                                    <div class="pagination-info">
                                        <span><%= accountNotes.length %> note<%= accountNotes.length !== 1 ? 's' : '' %></span>
                                    </div>
                                </div>
                            <% } else { %>
                                <div class="empty-state">
                                    <svg viewBox="0 0 20 20" fill="currentColor" class="empty-icon">
                                        <path d="M9 2a1 1 0 000 2h2a1 1 0 100-2H9z"/>
                                        <path fill-rule="evenodd" d="M4 5a2 2 0 012-2v1a1 1 0 001 1h6a1 1 0 001-1V3a2 2 0 012 2v6.5a1.5 1.5 0 01-1.5 1.5H7.5A1.5 1.5 0 016 11.5V5a2 2 0 012-2z"/>
                                    </svg>
                                    <h4>No notes found</h4>
                                    <p>No internal notes have been created for this account yet.</p>
                                    <button class="btn-primary">Create Note</button>
                                </div>
                            <% } %>
                        </div>
                    </div>

                    <!-- Tasks Tab -->
                    <div class="tab-pane" id="tasks-tab">
                        <div class="tasks-section">
                            <div class="section-header">
                                <h3>Account Tasks</h3>
                                <div class="header-actions">
                                    <button class="btn-primary">New Task</button>
                                </div>
                            </div>
                            
                            <div class="toolbar">
                                <div class="search-bar">
                                    <svg class="search-icon" viewBox="0 0 20 20" fill="currentColor">
                                        <path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z"/>
                                    </svg>
                                    <input type="text" placeholder="Search tasks..." class="search-input">
                                </div>
                                <div class="toolbar-right">
                                    <select class="status-filter">
                                        <option value="">All Status</option>
                                        <option value="not-started">Not Started</option>
                                        <option value="in-progress">In Progress</option>
                                        <option value="pending">Pending</option>
                                        <option value="completed">Completed</option>
                                    </select>
                                </div>
                            </div>

                            <% if (accountTasks.length > 0) { %>
                                <div class="tasks-table">
                                    <table>
                                        <thead>
                                            <tr>
                                                <th style="width: 30px;"><span class="resize-handle"></span></th>
                                                <th style="width: 120px;">Task ID<span class="resize-handle"></span></th>
                                                <th style="width: 300px;">Title<span class="resize-handle"></span></th>
                                                <th style="width: 150px;">Assignee<span class="resize-handle"></span></th>
                                                <th style="width: 120px;">Due Date<span class="resize-handle"></span></th>
                                                <th style="width: 120px;">Status<span class="resize-handle"></span></th>
                                                <th style="width: 100px;">Priority<span class="resize-handle"></span></th>
                                                <th style="width: 150px;">Category<span class="resize-handle"></span></th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <% accountTasks.forEach(task => { %>
                                            <tr data-task-id="<%= task.id %>" data-href="/tasks/<%= task.id %>">
                                                <td>
                                                    <input type="checkbox" class="task-checkbox" <%= task.status === 'Completed' ? 'checked' : '' %>>
                                                </td>
                                                <td><span class="task-id"><%= task.id %></span></td>
                                                <td>
                                                    <div class="task-title-cell">
                                                        <span class="task-title"><%= task.title %></span>
                                                        <span class="task-description"><%= task.description %></span>
                                                    </div>
                                                </td>
                                                <td>
                                                    <div class="assignee-cell">
                                                        <div class="assignee-avatar internal">
                                                            <%= task.assignee.split(' ').map(n => n[0]).join('').substring(0, 2) %>
                                                        </div>
                                                        <span class="assignee-name"><%= task.assignee %></span>
                                                    </div>
                                                </td>
                                                <td>
                                                    <span class="due-date <%= new Date(task.dueDate) < new Date() && task.status !== 'Completed' ? 'overdue' : '' %>">
                                                        <%= task.dueDate %>
                                                    </span>
                                                </td>
                                                <td>
                                                    <span class="status-badge status-<%= task.status.toLowerCase().replace(/\s+/g, '-') %>">
                                                        <%= task.status %>
                                                    </span>
                                                </td>
                                                <td>
                                                    <span class="priority-badge priority-<%= task.priority.toLowerCase() %>">
                                                        <%= task.priority %>
                                                    </span>
                                                </td>
                                                <td>
                                                    <span class="category-tag"><%= task.category %></span>
                                                </td>
                                            </tr>
                                            <% }) %>
                                        </tbody>
                                    </table>
                                </div>
                                
                                <div class="table-footer">
                                    <div class="pagination-info">
                                        <span><%= accountTasks.length %> task<%= accountTasks.length !== 1 ? 's' : '' %></span>
                                        <span class="task-summary">
                                            • <%= accountTasks.filter(t => t.status === 'Completed').length %> completed
                                            • <%= accountTasks.filter(t => t.status === 'In Progress').length %> in progress
                                            • <%= accountTasks.filter(t => new Date(t.dueDate) < new Date() && t.status !== 'Completed').length %> overdue
                                        </span>
                                    </div>
                                </div>
                            <% } else { %>
                                <div class="empty-state">
                                    <svg viewBox="0 0 20 20" fill="currentColor" class="empty-icon">
                                        <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z"/>
                                    </svg>
                                    <h4>No tasks found</h4>
                                    <p>No tasks have been created for this account yet.</p>
                                    <button class="btn-primary">Create Task</button>
                                </div>
                            <% } %>
                        </div>
                    </div>

                    <!-- Journey Tab -->
                    <div class="tab-pane" id="journey-tab">
                        <% if (account.journey) { %>
                        <div class="journey-section">
                            <!-- Customer Lifecycle Summary -->
                            <div class="journey-summary">
                                <div class="journey-header">
                                    <div class="journey-title">
                                        <span class="journey-meta"><%= account.plan %> • Started <%= new Date(account.journey.startDate).toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' }) %></span>
                                    </div>
                                </div>

                                <!-- Journey Stages Progress -->
                                <div class="journey-stages">
                                    <div class="stages-container">
                                        <% 
                                        const stages = ['onboarding', 'adoption', 'growth', 'expansion'];
                                        const stageLabels = {
                                            onboarding: 'Onboarding',
                                            adoption: 'Adoption',
                                            growth: 'Growth',
                                            expansion: 'Expansion'
                                        };
                                        
                                        stages.forEach((stage, index) => {
                                            const stageData = account.journey.stages[stage];
                                            const isCompleted = stageData.completed === stageData.total && stageData.total > 0;
                                            const isCurrent = account.journey.currentStage === stage;
                                            const isPending = stages.indexOf(stage) > stages.indexOf(account.journey.currentStage);
                                        %>
                                        <div class="stage-item <%= isCompleted ? 'completed' : isCurrent ? 'current' : 'pending' %>">
                                            <div class="stage-indicator">
                                                <% if (isCompleted) { %>
                                                    <svg viewBox="0 0 20 20" fill="currentColor">
                                                        <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"/>
                                                    </svg>
                                                <% } else if (isCurrent) { %>
                                                    <svg viewBox="0 0 20 20" fill="currentColor">
                                                        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z" clip-rule="evenodd"/>
                                                    </svg>
                                                <% } else { %>
                                                    <span class="stage-number"><%= index + 1 %></span>
                                                <% } %>
                                            </div>
                                            <div class="stage-info">
                                                <div class="stage-name"><%= stageLabels[stage] %></div>
                                                <div class="stage-progress"><%= stageData.completed %>/<%= stageData.total %></div>
                                            </div>
                                        </div>
                                        <% if (index < stages.length - 1) { %>
                                            <div class="stage-connector <%= stages.indexOf(stage) < stages.indexOf(account.journey.currentStage) ? 'completed' : '' %>"></div>
                                        <% } %>
                                        <% }) %>
                                    </div>
                                </div>

                                <!-- Overall Progress -->
                                <div class="overall-progress">
                                    <% 
                                    const totalMilestones = Object.values(account.journey.stages).reduce((sum, stage) => sum + stage.total, 0);
                                    const completedMilestones = Object.values(account.journey.stages).reduce((sum, stage) => sum + stage.completed, 0);
                                    const progressPercentage = totalMilestones > 0 ? (completedMilestones / totalMilestones) * 100 : 0;
                                    %>
                                    <div class="progress-info">
                                        <span class="progress-label">Overall Journey Progress</span>
                                        <span class="progress-text"><%= completedMilestones %> of <%= totalMilestones %> milestones completed</span>
                                    </div>
                                    <div class="progress-bar">
                                        <div class="progress-fill" style="width: <%= progressPercentage %>%"></div>
                                    </div>
                                </div>
                            </div>

                            <!-- Two Column Layout -->
                            <div class="journey-content">
                                <!-- Left Column - Journey Timeline -->
                                <div class="journey-timeline">
                                    <div class="timeline-header">
                                        <h3>Journey Timeline</h3>
                                        <button class="btn-primary btn-sm">Add Milestone</button>
                                    </div>
                                    
                                    <div class="timeline-container">
                                        <% account.journey.milestones.forEach((milestone, index) => { %>
                                        <div class="timeline-item <%= milestone.status %>">
                                            <div class="timeline-marker">
                                                <% if (milestone.status === 'completed') { %>
                                                    <svg viewBox="0 0 20 20" fill="currentColor">
                                                        <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"/>
                                                    </svg>
                                                <% } else if (milestone.status === 'in_progress') { %>
                                                    <svg viewBox="0 0 20 20" fill="currentColor">
                                                        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z" clip-rule="evenodd"/>
                                                    </svg>
                                                <% } else { %>
                                                    <svg viewBox="0 0 20 20" fill="currentColor">
                                                        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z" clip-rule="evenodd"/>
                                                    </svg>
                                                <% } %>
                                            </div>
                                            <% if (index < account.journey.milestones.length - 1) { %>
                                                <div class="timeline-connector"></div>
                                            <% } %>
                                            <div class="timeline-content">
                                                <div class="milestone-header">
                                                    <h4><%= milestone.title %></h4>
                                                    <span class="milestone-status <%= milestone.status %>">
                                                        <%= milestone.status === 'completed' ? 'completed' : milestone.status === 'in_progress' ? 'in progress' : 'pending' %>
                                                    </span>
                                                </div>
                                                <p class="milestone-description"><%= milestone.description %></p>
                                                <div class="milestone-meta">
                                                    <span class="milestone-stage stage-<%= milestone.stage %>"><%= milestone.stage.charAt(0).toUpperCase() + milestone.stage.slice(1) %></span>
                                                    <% if (milestone.status === 'completed') { %>
                                                        <span class="milestone-date">Completed <%= new Date(milestone.completedDate).toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' }) %> • <%= milestone.completedBy %></span>
                                                    <% } else if (milestone.targetDate) { %>
                                                        <span class="milestone-date">Target: <%= new Date(milestone.targetDate).toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' }) %></span>
                                                    <% } %>
                                                </div>
                                                <% if (milestone.status !== 'completed') { %>
                                                    <button class="btn-complete" data-milestone-id="<%= milestone.id %>">
                                                        <svg viewBox="0 0 20 20" fill="currentColor">
                                                            <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"/>
                                                        </svg>
                                                        Mark Complete
                                                    </button>
                                                <% } %>
                                            </div>
                                        </div>
                                        <% }) %>
                                    </div>
                                </div>

                                <!-- Right Column - Business Goals -->
                                <div class="business-goals">
                                    <div class="goals-header">
                                        <h3>Business Goals</h3>
                                        <button class="btn-primary btn-sm">Add Goal</button>
                                    </div>
                                    
                                    <div class="goals-container">
                                        <% account.journey.businessGoals.forEach(goal => { %>
                                        <div class="goal-card <%= goal.status %>">
                                            <div class="goal-header">
                                                <div class="goal-title-row">
                                                    <div class="goal-icon">
                                                        <% if (goal.status === 'achieved') { %>
                                                            <svg viewBox="0 0 20 20" fill="currentColor">
                                                                <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"/>
                                                            </svg>
                                                        <% } else if (goal.status === 'in_progress') { %>
                                                            <svg viewBox="0 0 20 20" fill="currentColor">
                                                                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z" clip-rule="evenodd"/>
                                                            </svg>
                                                        <% } else { %>
                                                            <svg viewBox="0 0 20 20" fill="currentColor">
                                                                <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z" clip-rule="evenodd"/>
                                                            </svg>
                                                        <% } %>
                                                    </div>
                                                    <h4><%= goal.title %></h4>
                                                    <span class="goal-status <%= goal.status %>">
                                                        <%= goal.status === 'achieved' ? 'achieved' : goal.status === 'in_progress' ? 'in progress' : 'at risk' %>
                                                    </span>
                                                </div>
                                            </div>
                                            <div class="goal-progress">
                                                <div class="progress-label">Progress</div>
                                                <div class="progress-value">
                                                    <% if (goal.unit === '%') { %>
                                                        <%= goal.currentValue %>% / <%= goal.targetValue %>%
                                                    <% } else if (goal.unit === 'users') { %>
                                                        <%= goal.currentValue.toLocaleString() %>users / <%= goal.targetValue.toLocaleString() %>users
                                                    <% } else { %>
                                                        <%= goal.currentValue %> / <%= goal.targetValue %> <%= goal.unit %>
                                                    <% } %>
                                                </div>
                                            </div>
                                            <div class="goal-progress-bar">
                                                <div class="goal-progress-fill" style="width: <%= Math.min((goal.currentValue / goal.targetValue) * 100, 100) %>%"></div>
                                            </div>
                                            <div class="goal-footer">
                                                <% if (goal.status === 'achieved') { %>
                                                    <span class="goal-date">Achieved <%= new Date(goal.achievedDate).toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' }) %> • <%= goal.achievedBy %></span>
                                                <% } else if (goal.targetDate) { %>
                                                    <span class="goal-date">Target: <%= new Date(goal.targetDate).toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' }) %></span>
                                                <% } %>
                                                <% if (goal.status !== 'achieved') { %>
                                                    <button class="btn-achieve" data-goal-id="<%= goal.id %>">
                                                        <svg viewBox="0 0 20 20" fill="currentColor">
                                                            <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"/>
                                                        </svg>
                                                        Mark Achieved
                                                    </button>
                                                <% } %>
                                            </div>
                                        </div>
                                        <% }) %>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <% } else { %>
                        <div class="tab-placeholder">
                            <h3>Journey Not Available</h3>
                            <p>Journey data has not been configured for this account yet.</p>
                            <button class="btn-primary">Configure Journey</button>
                        </div>
                        <% } %>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script src="/js/main.js"></script>
</body>
</html>